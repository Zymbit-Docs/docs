<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/builds/zymbit/zkapputilslib/docs/cpp/index.rst">
    <section ids="c-api-documentation" names="c++\ api\ documentation">
        <title>C++ API Documentation</title>
        <paragraph>C++ interface to Zymkey Application Utilities Library. </paragraph>
        <paragraph><paragraph>This file contains the C API to the the Zymkey Application Utilities library. This API facilitates writing user space applications which use Zymkey to perform cryptographic operations, such as:</paragraph><enumerated_list enumtype="arabic" prefix="" suffix="."><list_item><paragraph>Signing of payloads using ECDSA</paragraph></list_item><list_item><paragraph>Verification of payloads that were signed using Zymkey</paragraph></list_item><list_item><paragraph>Exporting the public key that matches Zymkey’s private key</paragraph></list_item><list_item><paragraph>”Locking” and “unlocking” data objects</paragraph></list_item><list_item><paragraph>Generating random data Additionally, there are functions for changing the i2c address (i2c units only), setting tap sensitivity and controlling the LED. </paragraph></list_item></enumerated_list><definition_list><definition_list_item><term><strong>Author</strong></term><definition><paragraph>Scott Miller </paragraph></definition></definition_list_item><definition_list_item><term><strong>Version</strong></term><definition><paragraph>1.0 </paragraph></definition></definition_list_item><definition_list_item><term><strong>Date</strong></term><definition><paragraph>November 17, 2016 </paragraph></definition></definition_list_item><definition_list_item><term><strong>Copyright</strong></term><definition><paragraph>Zymbit, Inc.</paragraph></definition></definition_list_item></definition_list></paragraph>
        <index entries="['single',\ 'zkAppUtils\ (C++\ type)',\ '_CPPv410zkAppUtils',\ '',\ None]"></index>
        <desc classes="cpp" desctype="type" domain="cpp" noindex="False" objtype="type">
            <desc_signature ids="_CPPv410zkAppUtils _CPPv310zkAppUtils _CPPv210zkAppUtils zkAppUtils" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="namespacezk_app_utils" names="namespacezk_app_utils"></target><desc_annotation xml:space="preserve">namespace </desc_annotation><desc_name xml:space="preserve">zkAppUtils</desc_name></desc_signature_line></desc_signature>
            <desc_content>
                <container classes="breathe-sectiondef" objtype="typedef">
                    <rubric classes="breathe-sectiondef-title">Typedefs</rubric>
                    <index entries="['single',\ 'zkAppUtils::byteArray\ (C++\ type)',\ '_CPPv4N10zkAppUtils9byteArrayE',\ '',\ None]"></index>
                    <desc classes="cpp" desctype="type" domain="cpp" noindex="False" objtype="type">
                        <desc_signature ids="_CPPv4N10zkAppUtils9byteArrayE _CPPv3N10zkAppUtils9byteArrayE _CPPv2N10zkAppUtils9byteArrayE zkAppUtils::byteArray" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3" names="zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3"></target><desc_annotation xml:space="preserve">typedef </desc_annotation>std::vector&lt;uint8_t&gt; <desc_name xml:space="preserve">byteArray</desc_name></desc_signature_line></desc_signature>
                        <desc_content>
                            <paragraph>Typedef for a simple unsigned bytes container. </paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ 'zkAppUtils::intArray\ (C++\ type)',\ '_CPPv4N10zkAppUtils8intArrayE',\ '',\ None]"></index>
                    <desc classes="cpp" desctype="type" domain="cpp" noindex="False" objtype="type">
                        <desc_signature ids="_CPPv4N10zkAppUtils8intArrayE _CPPv3N10zkAppUtils8intArrayE _CPPv2N10zkAppUtils8intArrayE zkAppUtils::intArray" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="zk_app_utils_class_8h_1a7cc12af0cdc6374a29588629bd450da6" names="zk_app_utils_class_8h_1a7cc12af0cdc6374a29588629bd450da6"></target><desc_annotation xml:space="preserve">typedef </desc_annotation>std::vector&lt;int&gt; <desc_name xml:space="preserve">intArray</desc_name></desc_signature_line></desc_signature>
                        <desc_content>
                            <paragraph>Typedef for a simple integer container. </paragraph>
                        </desc_content>
                    </desc>
                </container>
                <index entries="['single',\ 'zkAppUtils::commonException\ (C++\ class)',\ '_CPPv4N10zkAppUtils15commonExceptionE',\ '',\ None]"></index>
                <desc classes="cpp" desctype="class" domain="cpp" noindex="False" objtype="class">
                    <desc_signature ids="_CPPv4N10zkAppUtils15commonExceptionE _CPPv3N10zkAppUtils15commonExceptionE _CPPv2N10zkAppUtils15commonExceptionE zkAppUtils::commonException" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1common_exception" names="classzk_app_utils_1_1common_exception"></target><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">commonException</desc_name> : <desc_annotation xml:space="preserve">public</desc_annotation> std::exception</desc_signature_line></desc_signature>
                    <desc_content>
                        <emphasis>#include &lt;zkAppUtilsClass.h&gt;</emphasis>
                        <paragraph>Exception class derived from std::exception. </paragraph>
                        <container classes="breathe-sectiondef" objtype="public-func">
                            <rubric classes="breathe-sectiondef-title">Public Functions</rubric>
                            <index entries="['single',\ 'zkAppUtils::commonException::commonException\ (C++\ function)',\ '_CPPv4N10zkAppUtils15commonException15commonExceptionENSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils15commonException15commonExceptionENSt6stringE _CPPv3N10zkAppUtils15commonException15commonExceptionENSt6stringE _CPPv2N10zkAppUtils15commonException15commonExceptionENSt6stringE zkAppUtils::commonException::commonException__ss" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1common_exception_1a02a5816cccdcd19e719bb288080c0e82" names="classzk_app_utils_1_1common_exception_1a02a5816cccdcd19e719bb288080c0e82"></target><desc_name xml:space="preserve">commonException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>status</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Constructor. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>status</literal>: A string which described the verbose exception </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::commonException::~commonException\ (C++\ function)',\ '_CPPv4N10zkAppUtils15commonExceptionD0Ev',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils15commonExceptionD0Ev _CPPv3N10zkAppUtils15commonExceptionD0Ev _CPPv2N10zkAppUtils15commonExceptionD0Ev zkAppUtils::commonException::~commonException" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1common_exception_1a3c0053dca967e9c898837a8a1f949f28" names="classzk_app_utils_1_1common_exception_1a3c0053dca967e9c898837a8a1f949f28"></target><desc_annotation xml:space="preserve">inline</desc_annotation> <desc_annotation xml:space="preserve">virtual</desc_annotation> <desc_name xml:space="preserve">~commonException</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Destructor. </paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::commonException::what\ (C++\ function)',\ '_CPPv4NK10zkAppUtils15commonException4whatEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils15commonException4whatEv _CPPv3NK10zkAppUtils15commonException4whatEv _CPPv2NK10zkAppUtils15commonException4whatEv zkAppUtils::commonException::whatC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1common_exception_1a91506a3f15bd559b94d9239a661390cb" names="classzk_app_utils_1_1common_exception_1a91506a3f15bd559b94d9239a661390cb"></target><desc_annotation xml:space="preserve">const</desc_annotation> char *<desc_name xml:space="preserve">what</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Override of std::exception <reference internal="True" refid="classzk_app_utils_1_1common_exception_1a91506a3f15bd559b94d9239a661390cb"><inline classes="std std-ref">what()</inline></reference> method. </paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="private-attrib">
                            <rubric classes="breathe-sectiondef-title">Private Members</rubric>
                            <index entries="['single',\ 'zkAppUtils::commonException::msg\ (C++\ member)',\ '_CPPv4N10zkAppUtils15commonException3msgE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils15commonException3msgE _CPPv3N10zkAppUtils15commonException3msgE _CPPv2N10zkAppUtils15commonException3msgE zkAppUtils::commonException::msg__ss" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1common_exception_1a21e84e935b572a43cf47bb71e0a73c7c" names="classzk_app_utils_1_1common_exception_1a21e84e935b572a43cf47bb71e0a73c7c"></target>std::string <desc_name xml:space="preserve">msg</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'zkAppUtils::timeoutException\ (C++\ class)',\ '_CPPv4N10zkAppUtils16timeoutExceptionE',\ '',\ None]"></index>
                <desc classes="cpp" desctype="class" domain="cpp" noindex="False" objtype="class">
                    <desc_signature ids="_CPPv4N10zkAppUtils16timeoutExceptionE _CPPv3N10zkAppUtils16timeoutExceptionE _CPPv2N10zkAppUtils16timeoutExceptionE zkAppUtils::timeoutException" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1timeout_exception" names="classzk_app_utils_1_1timeout_exception"></target><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">timeoutException</desc_name> : <desc_annotation xml:space="preserve">public</desc_annotation> std::exception</desc_signature_line></desc_signature>
                    <desc_content>
                        <emphasis>#include &lt;zkAppUtilsClass.h&gt;</emphasis>
                        <paragraph>Exception class derived from std::exception. </paragraph>
                        <container classes="breathe-sectiondef" objtype="public-func">
                            <rubric classes="breathe-sectiondef-title">Public Functions</rubric>
                            <index entries="['single',\ 'zkAppUtils::timeoutException::timeoutException\ (C++\ function)',\ '_CPPv4N10zkAppUtils16timeoutException16timeoutExceptionENSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils16timeoutException16timeoutExceptionENSt6stringE _CPPv3N10zkAppUtils16timeoutException16timeoutExceptionENSt6stringE _CPPv2N10zkAppUtils16timeoutException16timeoutExceptionENSt6stringE zkAppUtils::timeoutException::timeoutException__ss" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1timeout_exception_1aa5da5e052dc4c819ad7294fb0c840d58" names="classzk_app_utils_1_1timeout_exception_1aa5da5e052dc4c819ad7294fb0c840d58"></target><desc_name xml:space="preserve">timeoutException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>status</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Constructor. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>status</literal>: A string which described the verbose exception </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::timeoutException::~timeoutException\ (C++\ function)',\ '_CPPv4N10zkAppUtils16timeoutExceptionD0Ev',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils16timeoutExceptionD0Ev _CPPv3N10zkAppUtils16timeoutExceptionD0Ev _CPPv2N10zkAppUtils16timeoutExceptionD0Ev zkAppUtils::timeoutException::~timeoutException" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1timeout_exception_1abf7d12b6c879936a5e91438133716e31" names="classzk_app_utils_1_1timeout_exception_1abf7d12b6c879936a5e91438133716e31"></target><desc_annotation xml:space="preserve">inline</desc_annotation> <desc_annotation xml:space="preserve">virtual</desc_annotation> <desc_name xml:space="preserve">~timeoutException</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Destructor. </paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::timeoutException::what\ (C++\ function)',\ '_CPPv4NK10zkAppUtils16timeoutException4whatEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils16timeoutException4whatEv _CPPv3NK10zkAppUtils16timeoutException4whatEv _CPPv2NK10zkAppUtils16timeoutException4whatEv zkAppUtils::timeoutException::whatC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1timeout_exception_1aa02ea9cf2775e88dd07620569e2a9904" names="classzk_app_utils_1_1timeout_exception_1aa02ea9cf2775e88dd07620569e2a9904"></target><desc_annotation xml:space="preserve">const</desc_annotation> char *<desc_name xml:space="preserve">what</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Override of std::exception <reference internal="True" refid="classzk_app_utils_1_1timeout_exception_1aa02ea9cf2775e88dd07620569e2a9904"><inline classes="std std-ref">what()</inline></reference> method. </paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="private-attrib">
                            <rubric classes="breathe-sectiondef-title">Private Members</rubric>
                            <index entries="['single',\ 'zkAppUtils::timeoutException::msg\ (C++\ member)',\ '_CPPv4N10zkAppUtils16timeoutException3msgE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils16timeoutException3msgE _CPPv3N10zkAppUtils16timeoutException3msgE _CPPv2N10zkAppUtils16timeoutException3msgE zkAppUtils::timeoutException::msg__ss" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1timeout_exception_1a416fcdb93ec8fa1a12df12891d9a727e" names="classzk_app_utils_1_1timeout_exception_1a416fcdb93ec8fa1a12df12891d9a727e"></target>std::string <desc_name xml:space="preserve">msg</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType\ (C++\ class)',\ '_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeE',\ '',\ None]"></index>
                <desc classes="cpp" desctype="class" domain="cpp" noindex="False" objtype="class">
                    <desc_signature ids="_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeE _CPPv3N10zkAppUtils24recoveryStrategyBaseTypeE _CPPv2N10zkAppUtils24recoveryStrategyBaseTypeE zkAppUtils::recoveryStrategyBaseType" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type" names="classzk_app_utils_1_1recovery_strategy_base_type"></target><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">recoveryStrategyBaseType</desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                        <emphasis>#include &lt;zkAppUtilsClass.h&gt;</emphasis>
                        <paragraph>Class used for retrieval of recovery mnemonic for Bip32 wallet. </paragraph>
                        <paragraph>Subclassed by <reference internal="True" refid="classzk_app_utils_1_1recovery_strategy_b_i_p39"><inline classes="std std-ref">zkAppUtils::recoveryStrategyBIP39</inline></reference>, <reference internal="True" refid="classzk_app_utils_1_1recovery_strategy_s_l_i_p39"><inline classes="std std-ref">zkAppUtils::recoveryStrategySLIP39</inline></reference></paragraph>
                        <container classes="breathe-sectiondef" objtype="public-func">
                            <rubric classes="breathe-sectiondef-title">Public Functions</rubric>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::recoveryStrategyBaseType\ (C++\ function)',\ '_CPPv4N10zkAppUtils24recoveryStrategyBaseType24recoveryStrategyBaseTypeERKNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils24recoveryStrategyBaseType24recoveryStrategyBaseTypeERKNSt6stringE _CPPv3N10zkAppUtils24recoveryStrategyBaseType24recoveryStrategyBaseTypeERKNSt6stringE _CPPv2N10zkAppUtils24recoveryStrategyBaseType24recoveryStrategyBaseTypeERKNSt6stringE zkAppUtils::recoveryStrategyBaseType::recoveryStrategyBaseType__ssCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1ad121e69cc920c187d823b223e791004e" names="classzk_app_utils_1_1recovery_strategy_base_type_1ad121e69cc920c187d823b223e791004e"></target><desc_name xml:space="preserve">recoveryStrategyBaseType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>key_variant</emphasis> = ""</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::~recoveryStrategyBaseType\ (C++\ function)',\ '_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeD0Ev',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeD0Ev _CPPv3N10zkAppUtils24recoveryStrategyBaseTypeD0Ev _CPPv2N10zkAppUtils24recoveryStrategyBaseTypeD0Ev zkAppUtils::recoveryStrategyBaseType::~recoveryStrategyBaseType" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1a0f53c832b83b15bc484810ed27c3f348" names="classzk_app_utils_1_1recovery_strategy_base_type_1a0f53c832b83b15bc484810ed27c3f348"></target><desc_name xml:space="preserve">~recoveryStrategyBaseType</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::getRecoveryStrategy\ (C++\ function)',\ '_CPPv4NK10zkAppUtils24recoveryStrategyBaseType19getRecoveryStrategyEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils24recoveryStrategyBaseType19getRecoveryStrategyEv _CPPv3NK10zkAppUtils24recoveryStrategyBaseType19getRecoveryStrategyEv _CPPv2NK10zkAppUtils24recoveryStrategyBaseType19getRecoveryStrategyEv zkAppUtils::recoveryStrategyBaseType::getRecoveryStrategyC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1a01d29cc209df6b64c98d8e7a18d4e53a" names="classzk_app_utils_1_1recovery_strategy_base_type_1a01d29cc209df6b64c98d8e7a18d4e53a"></target><desc_annotation xml:space="preserve">inline</desc_annotation> ZK_RECOVERY_STRATEGY <desc_name xml:space="preserve">getRecoveryStrategy</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::setVariant\ (C++\ function)',\ '_CPPv4N10zkAppUtils24recoveryStrategyBaseType10setVariantERKNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils24recoveryStrategyBaseType10setVariantERKNSt6stringE _CPPv3N10zkAppUtils24recoveryStrategyBaseType10setVariantERKNSt6stringE _CPPv2N10zkAppUtils24recoveryStrategyBaseType10setVariantERKNSt6stringE zkAppUtils::recoveryStrategyBaseType::setVariant__ssCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1a226a73e41bdea4be682526934c6bf1d2" names="classzk_app_utils_1_1recovery_strategy_base_type_1a226a73e41bdea4be682526934c6bf1d2"></target><desc_annotation xml:space="preserve">inline</desc_annotation> void <desc_name xml:space="preserve">setVariant</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>key_variant</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::getVariant\ (C++\ function)',\ '_CPPv4NK10zkAppUtils24recoveryStrategyBaseType10getVariantEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils24recoveryStrategyBaseType10getVariantEv _CPPv3NK10zkAppUtils24recoveryStrategyBaseType10getVariantEv _CPPv2NK10zkAppUtils24recoveryStrategyBaseType10getVariantEv zkAppUtils::recoveryStrategyBaseType::getVariantC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1a491c7c16800212b22ef5252a517c8745" names="classzk_app_utils_1_1recovery_strategy_base_type_1a491c7c16800212b22ef5252a517c8745"></target><desc_annotation xml:space="preserve">inline</desc_annotation> std::string <desc_name xml:space="preserve">getVariant</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::getPassPhrase\ (C++\ function)',\ '_CPPv4NK10zkAppUtils24recoveryStrategyBaseType13getPassPhraseEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils24recoveryStrategyBaseType13getPassPhraseEv _CPPv3NK10zkAppUtils24recoveryStrategyBaseType13getPassPhraseEv _CPPv2NK10zkAppUtils24recoveryStrategyBaseType13getPassPhraseEv zkAppUtils::recoveryStrategyBaseType::getPassPhraseC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1a16415ed8c4c0f1382cdab19ad02b0b37" names="classzk_app_utils_1_1recovery_strategy_base_type_1a16415ed8c4c0f1382cdab19ad02b0b37"></target><desc_annotation xml:space="preserve">inline</desc_annotation> <desc_annotation xml:space="preserve">virtual</desc_annotation> std::string <desc_name xml:space="preserve">getPassPhrase</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="protected-attrib">
                            <rubric classes="breathe-sectiondef-title">Protected Attributes</rubric>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::recoveryStrategy\ (C++\ member)',\ '_CPPv4N10zkAppUtils24recoveryStrategyBaseType16recoveryStrategyE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils24recoveryStrategyBaseType16recoveryStrategyE _CPPv3N10zkAppUtils24recoveryStrategyBaseType16recoveryStrategyE _CPPv2N10zkAppUtils24recoveryStrategyBaseType16recoveryStrategyE zkAppUtils::recoveryStrategyBaseType::recoveryStrategy__ZK_RECOVERY_STRATEGY" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1ab69e4026f5e5cb91f5b87ae1dbbcbbbb" names="classzk_app_utils_1_1recovery_strategy_base_type_1ab69e4026f5e5cb91f5b87ae1dbbcbbbb"></target>ZK_RECOVERY_STRATEGY <desc_name xml:space="preserve">recoveryStrategy</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBaseType::variant\ (C++\ member)',\ '_CPPv4N10zkAppUtils24recoveryStrategyBaseType7variantE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils24recoveryStrategyBaseType7variantE _CPPv3N10zkAppUtils24recoveryStrategyBaseType7variantE _CPPv2N10zkAppUtils24recoveryStrategyBaseType7variantE zkAppUtils::recoveryStrategyBaseType::variant__ss" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_base_type_1a64bc26e7ad61c2d645a1acb1f2df5b9f" names="classzk_app_utils_1_1recovery_strategy_base_type_1a64bc26e7ad61c2d645a1acb1f2df5b9f"></target>std::string <desc_name xml:space="preserve">variant</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'zkAppUtils::recoveryStrategyBIP39\ (C++\ class)',\ '_CPPv4N10zkAppUtils21recoveryStrategyBIP39E',\ '',\ None]"></index>
                <desc classes="cpp" desctype="class" domain="cpp" noindex="False" objtype="class">
                    <desc_signature ids="_CPPv4N10zkAppUtils21recoveryStrategyBIP39E _CPPv3N10zkAppUtils21recoveryStrategyBIP39E _CPPv2N10zkAppUtils21recoveryStrategyBIP39E zkAppUtils::recoveryStrategyBIP39" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_b_i_p39" names="classzk_app_utils_1_1recovery_strategy_b_i_p39"></target><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">recoveryStrategyBIP39</desc_name> : <desc_annotation xml:space="preserve">public</desc_annotation> <reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::recoveryStrategyBaseType" refuri="_api/classzk_app_utils_1_1recovery_strategy_base_type#_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeE">recoveryStrategyBaseType</reference></desc_signature_line></desc_signature>
                    <desc_content>
                        <emphasis>#include &lt;zkAppUtilsClass.h&gt;</emphasis>
                        <paragraph>Class used for BIP39 recovery strategy. User can set b64 encoded passphrase and key variant (only “cardano” is supported for ed25519 currently) for bip32 seed generation. It can also hold the mnemonic sentence from master seed generation. </paragraph>
                        <container classes="breathe-sectiondef" objtype="public-func">
                            <rubric classes="breathe-sectiondef-title">Public Functions</rubric>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBIP39::recoveryStrategyBIP39\ (C++\ function)',\ '_CPPv4N10zkAppUtils21recoveryStrategyBIP3921recoveryStrategyBIP39ERKNSt6stringERKNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils21recoveryStrategyBIP3921recoveryStrategyBIP39ERKNSt6stringERKNSt6stringE _CPPv3N10zkAppUtils21recoveryStrategyBIP3921recoveryStrategyBIP39ERKNSt6stringERKNSt6stringE _CPPv2N10zkAppUtils21recoveryStrategyBIP3921recoveryStrategyBIP39ERKNSt6stringERKNSt6stringE zkAppUtils::recoveryStrategyBIP39::recoveryStrategyBIP39__ssCR.ssCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_b_i_p39_1a5aa5fb926bc33091691218aa30c11fba" names="classzk_app_utils_1_1recovery_strategy_b_i_p39_1a5aa5fb926bc33091691218aa30c11fba"></target><desc_name xml:space="preserve">recoveryStrategyBIP39</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>passphrase</emphasis> = ""</desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>key_variant</emphasis> = ""</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBIP39::~recoveryStrategyBIP39\ (C++\ function)',\ '_CPPv4N10zkAppUtils21recoveryStrategyBIP39D0Ev',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils21recoveryStrategyBIP39D0Ev _CPPv3N10zkAppUtils21recoveryStrategyBIP39D0Ev _CPPv2N10zkAppUtils21recoveryStrategyBIP39D0Ev zkAppUtils::recoveryStrategyBIP39::~recoveryStrategyBIP39" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_b_i_p39_1a6692050ccaadff2943c0a396e6962be6" names="classzk_app_utils_1_1recovery_strategy_b_i_p39_1a6692050ccaadff2943c0a396e6962be6"></target><desc_name xml:space="preserve">~recoveryStrategyBIP39</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBIP39::setPassPhrase\ (C++\ function)',\ '_CPPv4N10zkAppUtils21recoveryStrategyBIP3913setPassPhraseERKNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils21recoveryStrategyBIP3913setPassPhraseERKNSt6stringE _CPPv3N10zkAppUtils21recoveryStrategyBIP3913setPassPhraseERKNSt6stringE _CPPv2N10zkAppUtils21recoveryStrategyBIP3913setPassPhraseERKNSt6stringE zkAppUtils::recoveryStrategyBIP39::setPassPhrase__ssCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_b_i_p39_1ac1c9b9b721be60e9e6bf7567db97322f" names="classzk_app_utils_1_1recovery_strategy_b_i_p39_1ac1c9b9b721be60e9e6bf7567db97322f"></target><desc_annotation xml:space="preserve">inline</desc_annotation> void <desc_name xml:space="preserve">setPassPhrase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>passphrase</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBIP39::getPassPhrase\ (C++\ function)',\ '_CPPv4NK10zkAppUtils21recoveryStrategyBIP3913getPassPhraseEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils21recoveryStrategyBIP3913getPassPhraseEv _CPPv3NK10zkAppUtils21recoveryStrategyBIP3913getPassPhraseEv _CPPv2NK10zkAppUtils21recoveryStrategyBIP3913getPassPhraseEv zkAppUtils::recoveryStrategyBIP39::getPassPhraseC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_b_i_p39_1ac685ed29676c694fa18da237ed0a6c1e" names="classzk_app_utils_1_1recovery_strategy_b_i_p39_1ac685ed29676c694fa18da237ed0a6c1e"></target><desc_annotation xml:space="preserve">inline</desc_annotation> <desc_annotation xml:space="preserve">virtual</desc_annotation> std::string <desc_name xml:space="preserve">getPassPhrase</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="private-attrib">
                            <rubric classes="breathe-sectiondef-title">Private Members</rubric>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategyBIP39::passPhrase\ (C++\ member)',\ '_CPPv4N10zkAppUtils21recoveryStrategyBIP3910passPhraseE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils21recoveryStrategyBIP3910passPhraseE _CPPv3N10zkAppUtils21recoveryStrategyBIP3910passPhraseE _CPPv2N10zkAppUtils21recoveryStrategyBIP3910passPhraseE zkAppUtils::recoveryStrategyBIP39::passPhrase__ss" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_b_i_p39_1abc4104c4fff42d9638c60798e6a967b3" names="classzk_app_utils_1_1recovery_strategy_b_i_p39_1abc4104c4fff42d9638c60798e6a967b3"></target>std::string <desc_name xml:space="preserve">passPhrase</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39\ (C++\ class)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP39E',\ '',\ None]"></index>
                <desc classes="cpp" desctype="class" domain="cpp" noindex="False" objtype="class">
                    <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP39E _CPPv3N10zkAppUtils22recoveryStrategySLIP39E _CPPv2N10zkAppUtils22recoveryStrategySLIP39E zkAppUtils::recoveryStrategySLIP39" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39"></target><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">recoveryStrategySLIP39</desc_name> : <desc_annotation xml:space="preserve">public</desc_annotation> <reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::recoveryStrategyBaseType" refuri="_api/classzk_app_utils_1_1recovery_strategy_base_type#_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeE">recoveryStrategyBaseType</reference></desc_signature_line></desc_signature>
                    <desc_content>
                        <container classes="breathe-sectiondef" objtype="public-func">
                            <rubric classes="breathe-sectiondef-title">Public Functions</rubric>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::recoveryStrategySLIP39\ (C++\ function)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3922recoveryStrategySLIP39EiiiRKNSt6stringERKNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3922recoveryStrategySLIP39EiiiRKNSt6stringERKNSt6stringE _CPPv3N10zkAppUtils22recoveryStrategySLIP3922recoveryStrategySLIP39EiiiRKNSt6stringERKNSt6stringE _CPPv2N10zkAppUtils22recoveryStrategySLIP3922recoveryStrategySLIP39EiiiRKNSt6stringERKNSt6stringE zkAppUtils::recoveryStrategySLIP39::recoveryStrategySLIP39__i.i.i.ssCR.ssCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a0647823f6b95d36d292e1e31afcf549a" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a0647823f6b95d36d292e1e31afcf549a"></target><desc_name xml:space="preserve">recoveryStrategySLIP39</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>group_count</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>group_threshold</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>iteration_exponent</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>passphrase</emphasis> = ""</desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>key_variant</emphasis> = ""</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::~recoveryStrategySLIP39\ (C++\ function)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP39D0Ev',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP39D0Ev _CPPv3N10zkAppUtils22recoveryStrategySLIP39D0Ev _CPPv2N10zkAppUtils22recoveryStrategySLIP39D0Ev zkAppUtils::recoveryStrategySLIP39::~recoveryStrategySLIP39" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a045bfb0191290fc5c952db2af39f5306" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a045bfb0191290fc5c952db2af39f5306"></target><desc_name xml:space="preserve">~recoveryStrategySLIP39</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::setPassPhrase\ (C++\ function)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3913setPassPhraseERKNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3913setPassPhraseERKNSt6stringE _CPPv3N10zkAppUtils22recoveryStrategySLIP3913setPassPhraseERKNSt6stringE _CPPv2N10zkAppUtils22recoveryStrategySLIP3913setPassPhraseERKNSt6stringE zkAppUtils::recoveryStrategySLIP39::setPassPhrase__ssCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1aea3b19fe261a0d19ab8ba85b6be3c844" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1aea3b19fe261a0d19ab8ba85b6be3c844"></target><desc_annotation xml:space="preserve">inline</desc_annotation> void <desc_name xml:space="preserve">setPassPhrase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>passphrase</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::getPassPhrase\ (C++\ function)',\ '_CPPv4NK10zkAppUtils22recoveryStrategySLIP3913getPassPhraseEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils22recoveryStrategySLIP3913getPassPhraseEv _CPPv3NK10zkAppUtils22recoveryStrategySLIP3913getPassPhraseEv _CPPv2NK10zkAppUtils22recoveryStrategySLIP3913getPassPhraseEv zkAppUtils::recoveryStrategySLIP39::getPassPhraseC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a20c94db2f768a96c6e63f57a1bb70dc1" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a20c94db2f768a96c6e63f57a1bb70dc1"></target><desc_annotation xml:space="preserve">inline</desc_annotation> <desc_annotation xml:space="preserve">virtual</desc_annotation> std::string <desc_name xml:space="preserve">getPassPhrase</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::setGroupCount\ (C++\ function)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3913setGroupCountEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3913setGroupCountEi _CPPv3N10zkAppUtils22recoveryStrategySLIP3913setGroupCountEi _CPPv2N10zkAppUtils22recoveryStrategySLIP3913setGroupCountEi zkAppUtils::recoveryStrategySLIP39::setGroupCount__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a842ac641957b43d12fd915d20920cd54" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a842ac641957b43d12fd915d20920cd54"></target><desc_annotation xml:space="preserve">inline</desc_annotation> void <desc_name xml:space="preserve">setGroupCount</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>group_count</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::getGroupCount\ (C++\ function)',\ '_CPPv4NK10zkAppUtils22recoveryStrategySLIP3913getGroupCountEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils22recoveryStrategySLIP3913getGroupCountEv _CPPv3NK10zkAppUtils22recoveryStrategySLIP3913getGroupCountEv _CPPv2NK10zkAppUtils22recoveryStrategySLIP3913getGroupCountEv zkAppUtils::recoveryStrategySLIP39::getGroupCountC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a52daf145f639080964cca346b6da8cbb" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a52daf145f639080964cca346b6da8cbb"></target><desc_annotation xml:space="preserve">inline</desc_annotation> int <desc_name xml:space="preserve">getGroupCount</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::setGroupThreshold\ (C++\ function)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3917setGroupThresholdEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3917setGroupThresholdEi _CPPv3N10zkAppUtils22recoveryStrategySLIP3917setGroupThresholdEi _CPPv2N10zkAppUtils22recoveryStrategySLIP3917setGroupThresholdEi zkAppUtils::recoveryStrategySLIP39::setGroupThreshold__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a42eaf376ac34a8ca1c8af4d799720f2c" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a42eaf376ac34a8ca1c8af4d799720f2c"></target><desc_annotation xml:space="preserve">inline</desc_annotation> void <desc_name xml:space="preserve">setGroupThreshold</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>group_threshold</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::getGroupThreshold\ (C++\ function)',\ '_CPPv4NK10zkAppUtils22recoveryStrategySLIP3917getGroupThresholdEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils22recoveryStrategySLIP3917getGroupThresholdEv _CPPv3NK10zkAppUtils22recoveryStrategySLIP3917getGroupThresholdEv _CPPv2NK10zkAppUtils22recoveryStrategySLIP3917getGroupThresholdEv zkAppUtils::recoveryStrategySLIP39::getGroupThresholdC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a1cb94cd5c4241a3e23a2878d3cb067c1" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a1cb94cd5c4241a3e23a2878d3cb067c1"></target><desc_annotation xml:space="preserve">inline</desc_annotation> int <desc_name xml:space="preserve">getGroupThreshold</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::setIterationExponent\ (C++\ function)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3920setIterationExponentEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3920setIterationExponentEi _CPPv3N10zkAppUtils22recoveryStrategySLIP3920setIterationExponentEi _CPPv2N10zkAppUtils22recoveryStrategySLIP3920setIterationExponentEi zkAppUtils::recoveryStrategySLIP39::setIterationExponent__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1ac2a46dbe5fc0839b82ce6d7f109ee67c" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1ac2a46dbe5fc0839b82ce6d7f109ee67c"></target><desc_annotation xml:space="preserve">inline</desc_annotation> void <desc_name xml:space="preserve">setIterationExponent</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>iteration_exponent</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::getIterationExponent\ (C++\ function)',\ '_CPPv4NK10zkAppUtils22recoveryStrategySLIP3920getIterationExponentEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4NK10zkAppUtils22recoveryStrategySLIP3920getIterationExponentEv _CPPv3NK10zkAppUtils22recoveryStrategySLIP3920getIterationExponentEv _CPPv2NK10zkAppUtils22recoveryStrategySLIP3920getIterationExponentEv zkAppUtils::recoveryStrategySLIP39::getIterationExponentC" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a8d32ad728c5a16beeea2d380526b910d" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a8d32ad728c5a16beeea2d380526b910d"></target><desc_annotation xml:space="preserve">inline</desc_annotation> int <desc_name xml:space="preserve">getIterationExponent</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist> <desc_annotation xml:space="preserve">const</desc_annotation></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="private-attrib">
                            <rubric classes="breathe-sectiondef-title">Private Members</rubric>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::groupCount\ (C++\ member)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3910groupCountE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3910groupCountE _CPPv3N10zkAppUtils22recoveryStrategySLIP3910groupCountE _CPPv2N10zkAppUtils22recoveryStrategySLIP3910groupCountE zkAppUtils::recoveryStrategySLIP39::groupCount__i" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a2321d1df025ed896e3b30da9c2f8aa3a" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a2321d1df025ed896e3b30da9c2f8aa3a"></target>int <desc_name xml:space="preserve">groupCount</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::groupThreshold\ (C++\ member)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3914groupThresholdE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3914groupThresholdE _CPPv3N10zkAppUtils22recoveryStrategySLIP3914groupThresholdE _CPPv2N10zkAppUtils22recoveryStrategySLIP3914groupThresholdE zkAppUtils::recoveryStrategySLIP39::groupThreshold__i" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1af3488f745ae476f3465dda5572e156fe" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1af3488f745ae476f3465dda5572e156fe"></target>int <desc_name xml:space="preserve">groupThreshold</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::iterationExponent\ (C++\ member)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3917iterationExponentE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3917iterationExponentE _CPPv3N10zkAppUtils22recoveryStrategySLIP3917iterationExponentE _CPPv2N10zkAppUtils22recoveryStrategySLIP3917iterationExponentE zkAppUtils::recoveryStrategySLIP39::iterationExponent__i" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a76a8272fa9894a4612840fa933612a6d" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a76a8272fa9894a4612840fa933612a6d"></target>int <desc_name xml:space="preserve">iterationExponent</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::recoveryStrategySLIP39::passPhrase\ (C++\ member)',\ '_CPPv4N10zkAppUtils22recoveryStrategySLIP3910passPhraseE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils22recoveryStrategySLIP3910passPhraseE _CPPv3N10zkAppUtils22recoveryStrategySLIP3910passPhraseE _CPPv2N10zkAppUtils22recoveryStrategySLIP3910passPhraseE zkAppUtils::recoveryStrategySLIP39::passPhrase__ss" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a75c330205908eb8288f7f3afffbc9090" names="classzk_app_utils_1_1recovery_strategy_s_l_i_p39_1a75c330205908eb8288f7f3afffbc9090"></target>std::string <desc_name xml:space="preserve">passPhrase</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'zkAppUtils::accelData\ (C++\ struct)',\ '_CPPv4N10zkAppUtils9accelDataE',\ '',\ None]"></index>
                <desc classes="cpp" desctype="struct" domain="cpp" noindex="False" objtype="struct">
                    <desc_signature ids="_CPPv4N10zkAppUtils9accelDataE _CPPv3N10zkAppUtils9accelDataE _CPPv2N10zkAppUtils9accelDataE zkAppUtils::accelData" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="structzk_app_utils_1_1accel_data" names="structzk_app_utils_1_1accel_data"></target><desc_annotation xml:space="preserve">struct </desc_annotation><desc_name xml:space="preserve">accelData</desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                        <emphasis>#include &lt;zkAppUtilsClass.h&gt;</emphasis>
                        <paragraph>Structure typedef used for retrieval of accelerometer data. </paragraph>
                        <container classes="breathe-sectiondef" objtype="public-attrib">
                            <rubric classes="breathe-sectiondef-title">Public Members</rubric>
                            <index entries="['single',\ 'zkAppUtils::accelData::x\ (C++\ member)',\ '_CPPv4N10zkAppUtils9accelData1xE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils9accelData1xE _CPPv3N10zkAppUtils9accelData1xE _CPPv2N10zkAppUtils9accelData1xE zkAppUtils::accelData::x__double" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="structzk_app_utils_1_1accel_data_1ade088cb17d564e9ab8de27df8e529b53" names="structzk_app_utils_1_1accel_data_1ade088cb17d564e9ab8de27df8e529b53"></target>double <desc_name xml:space="preserve">x</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::accelData::y\ (C++\ member)',\ '_CPPv4N10zkAppUtils9accelData1yE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils9accelData1yE _CPPv3N10zkAppUtils9accelData1yE _CPPv2N10zkAppUtils9accelData1yE zkAppUtils::accelData::y__double" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="structzk_app_utils_1_1accel_data_1a523ccaa6bbe89ac2e2e7ccd6ed56ba92" names="structzk_app_utils_1_1accel_data_1a523ccaa6bbe89ac2e2e7ccd6ed56ba92"></target>double <desc_name xml:space="preserve">y</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::accelData::z\ (C++\ member)',\ '_CPPv4N10zkAppUtils9accelData1zE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils9accelData1zE _CPPv3N10zkAppUtils9accelData1zE _CPPv2N10zkAppUtils9accelData1zE zkAppUtils::accelData::z__double" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="structzk_app_utils_1_1accel_data_1a5080fb3abbdeeac3b6b99bbeab84d2af" names="structzk_app_utils_1_1accel_data_1a5080fb3abbdeeac3b6b99bbeab84d2af"></target>double <desc_name xml:space="preserve">z</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::accelData::tapDirX\ (C++\ member)',\ '_CPPv4N10zkAppUtils9accelData7tapDirXE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils9accelData7tapDirXE _CPPv3N10zkAppUtils9accelData7tapDirXE _CPPv2N10zkAppUtils9accelData7tapDirXE zkAppUtils::accelData::tapDirX__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="structzk_app_utils_1_1accel_data_1acad0eacf3d403f2b9337223f915e7693" names="structzk_app_utils_1_1accel_data_1acad0eacf3d403f2b9337223f915e7693"></target>int <desc_name xml:space="preserve">tapDirX</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::accelData::tapDirY\ (C++\ member)',\ '_CPPv4N10zkAppUtils9accelData7tapDirYE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils9accelData7tapDirYE _CPPv3N10zkAppUtils9accelData7tapDirYE _CPPv2N10zkAppUtils9accelData7tapDirYE zkAppUtils::accelData::tapDirY__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="structzk_app_utils_1_1accel_data_1acee9fe0835114a7ee167ebe706dc807e" names="structzk_app_utils_1_1accel_data_1acee9fe0835114a7ee167ebe706dc807e"></target>int <desc_name xml:space="preserve">tapDirY</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::accelData::tapDirZ\ (C++\ member)',\ '_CPPv4N10zkAppUtils9accelData7tapDirZE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils9accelData7tapDirZE _CPPv3N10zkAppUtils9accelData7tapDirZE _CPPv2N10zkAppUtils9accelData7tapDirZE zkAppUtils::accelData::tapDirZ__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="structzk_app_utils_1_1accel_data_1a411a716f8caae78a98ea4983d796779f" names="structzk_app_utils_1_1accel_data_1a411a716f8caae78a98ea4983d796779f"></target>int <desc_name xml:space="preserve">tapDirZ</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'zkAppUtils::zkClass\ (C++\ class)',\ '_CPPv4N10zkAppUtils7zkClassE',\ '',\ None]"></index>
                <desc classes="cpp" desctype="class" domain="cpp" noindex="False" objtype="class">
                    <desc_signature ids="_CPPv4N10zkAppUtils7zkClassE _CPPv3N10zkAppUtils7zkClassE _CPPv2N10zkAppUtils7zkClassE zkAppUtils::zkClass" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class" names="classzk_app_utils_1_1zk_class"></target><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">zkClass</desc_name></desc_signature_line></desc_signature>
                    <desc_content>
                        <emphasis>#include &lt;zkAppUtilsClass.h&gt;</emphasis>
                        <paragraph>The main class. </paragraph>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Zymkey Context</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::zkClass\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass7zkClassEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass7zkClassEv _CPPv3N10zkAppUtils7zkClass7zkClassEv _CPPv2N10zkAppUtils7zkClass7zkClassEv zkAppUtils::zkClass::zkClass" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1af2017a24669f2f1f84743ab8eb1b2e6d" names="classzk_app_utils_1_1zk_class_1af2017a24669f2f1f84743ab8eb1b2e6d"></target><desc_name xml:space="preserve">zkClass</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Constructor: a Zymkey context is opened. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::~zkClass\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClassD0Ev',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClassD0Ev _CPPv3N10zkAppUtils7zkClassD0Ev _CPPv2N10zkAppUtils7zkClassD0Ev zkAppUtils::zkClass::~zkClass" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a9fd36f5cebc6fc718abd7c63b0e30035" names="classzk_app_utils_1_1zk_class_1a9fd36f5cebc6fc718abd7c63b0e30035"></target><desc_annotation xml:space="preserve">virtual</desc_annotation> <desc_name xml:space="preserve">~zkClass</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Destructor: the Zymkey context is closed. </paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Random Number Generation</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::createRandDataFile\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass18createRandDataFileERNSt6stringEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass18createRandDataFileERNSt6stringEi _CPPv3N10zkAppUtils7zkClass18createRandDataFileERNSt6stringEi _CPPv2N10zkAppUtils7zkClass18createRandDataFileERNSt6stringEi zkAppUtils::zkClass::createRandDataFile__ssR.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a9a4a7c019b82d8b1760ae9f743de944d" names="classzk_app_utils_1_1zk_class_1a9a4a7c019b82d8b1760ae9f743de944d"></target>void <desc_name xml:space="preserve">createRandDataFile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>dst_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>rdata_sz</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Write random data to a file. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>dst_filename</literal>: A string containing the absolute path to the file where random data is written </paragraph></list_item><list_item><paragraph><literal>rdata_sz</literal>: The number of random bytes to generate </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getRandBytes\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass12getRandBytesEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass12getRandBytesEi _CPPv3N10zkAppUtils7zkClass12getRandBytesEi _CPPv2N10zkAppUtils7zkClass12getRandBytesEi zkAppUtils::zkClass::getRandBytes__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ae6c1bc3ff39beea99f72e7740c528313" names="classzk_app_utils_1_1zk_class_1ae6c1bc3ff39beea99f72e7740c528313"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">getRandBytes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>rdata_sz</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate a block of random data. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>A pointer to container with the random bytes </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>rdata_sz</literal>: The number of random bytes to generate </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Lock Data</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::lockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass8lockDataERKNSt6stringERKNSt6stringEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass8lockDataERKNSt6stringERKNSt6stringEb _CPPv3N10zkAppUtils7zkClass8lockDataERKNSt6stringERKNSt6stringEb _CPPv2N10zkAppUtils7zkClass8lockDataERKNSt6stringERKNSt6stringEb zkAppUtils::zkClass::lockData__ssCR.ssCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a65aee74e18121f104b8420822013452e" names="classzk_app_utils_1_1zk_class_1a65aee74e18121f104b8420822013452e"></target>void <desc_name xml:space="preserve">lockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>src_pt_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>dst_ct_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Locks data from a plaintext source file and stores locked data object to a destination file. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_pt_filename</literal>: Absolute path to source plaintext file </paragraph></list_item><list_item><paragraph><literal>dst_ct_filename</literal>: Absolute path to destination file which will contain locked data object </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::lockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass8lockDataERK9byteArrayRKNSt6stringEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass8lockDataERK9byteArrayRKNSt6stringEb _CPPv3N10zkAppUtils7zkClass8lockDataERK9byteArrayRKNSt6stringEb _CPPv2N10zkAppUtils7zkClass8lockDataERK9byteArrayRKNSt6stringEb zkAppUtils::zkClass::lockData__byteArrayCR.ssCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a12a0b56f2d9957e4f6f66964b1dc88c8" names="classzk_app_utils_1_1zk_class_1a12a0b56f2d9957e4f6f66964b1dc88c8"></target>void <desc_name xml:space="preserve">lockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>src_pt_data</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>dst_ct_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Locks data from a plaintext source byte container and stores locked data object to a destination file. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_pt_data</literal>: Unsigned byte container which holds source plaintext data </paragraph></list_item><list_item><paragraph><literal>dst_ct_filename</literal>: Absolute path to destination file which will contain locked data object </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::lockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass8lockDataERKNSt6stringEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass8lockDataERKNSt6stringEb _CPPv3N10zkAppUtils7zkClass8lockDataERKNSt6stringEb _CPPv2N10zkAppUtils7zkClass8lockDataERKNSt6stringEb zkAppUtils::zkClass::lockData__ssCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a749ea09595c364126d54f99022d4ceb6" names="classzk_app_utils_1_1zk_class_1a749ea09595c364126d54f99022d4ceb6"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">lockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>src_pt_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Locks data from a plaintext source file and stores locked data object in a container of unsigned bytes. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with locked data </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_pt_filename</literal>: Absolute path to source plaintext file </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::lockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass8lockDataERK9byteArrayb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass8lockDataERK9byteArrayb _CPPv3N10zkAppUtils7zkClass8lockDataERK9byteArrayb _CPPv2N10zkAppUtils7zkClass8lockDataERK9byteArrayb zkAppUtils::zkClass::lockData__byteArrayCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a5302506bc51be472e44f3f21b7223a2e" names="classzk_app_utils_1_1zk_class_1a5302506bc51be472e44f3f21b7223a2e"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">lockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>src_pt_data</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Locks data from a plaintext source byte container and stores locked data object in a container of unsigned bytes. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with locked data </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_pt_data</literal>: Unsigned byte container which holds source plaintext data </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Unlock Data</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::unlockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10unlockDataERKNSt6stringERKNSt6stringEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10unlockDataERKNSt6stringERKNSt6stringEb _CPPv3N10zkAppUtils7zkClass10unlockDataERKNSt6stringERKNSt6stringEb _CPPv2N10zkAppUtils7zkClass10unlockDataERKNSt6stringERKNSt6stringEb zkAppUtils::zkClass::unlockData__ssCR.ssCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a0ecbe6c828556f8f762fb74e628f13af" names="classzk_app_utils_1_1zk_class_1a0ecbe6c828556f8f762fb74e628f13af"></target>void <desc_name xml:space="preserve">unlockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>src_ct_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>dst_pt_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Unocks a locked data object from source file and stores unlocked data object to a destination file. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_ct_filename</literal>: Absolute path to source file which contains locked data object </paragraph></list_item><list_item><paragraph><literal>dst_pt_filename</literal>: Absolute path to destination file which will contain unlocked plaintext data </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::unlockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10unlockDataERK9byteArrayRKNSt6stringEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10unlockDataERK9byteArrayRKNSt6stringEb _CPPv3N10zkAppUtils7zkClass10unlockDataERK9byteArrayRKNSt6stringEb _CPPv2N10zkAppUtils7zkClass10unlockDataERK9byteArrayRKNSt6stringEb zkAppUtils::zkClass::unlockData__byteArrayCR.ssCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a40befc1bfc64e6a06e2169c8a102cd2f" names="classzk_app_utils_1_1zk_class_1a40befc1bfc64e6a06e2169c8a102cd2f"></target>void <desc_name xml:space="preserve">unlockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>src_ct_data</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>dst_pt_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Unlocks a locked data object contained in an unsigned byte container and stores plaintext data to a destination file. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_ct_data</literal>: Unsigned byte container which holds locked data object </paragraph></list_item><list_item><paragraph><literal>dst_pt_filename</literal>: Absolute path to destination file which will contain unlocked plaintext data </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::unlockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10unlockDataERKNSt6stringEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10unlockDataERKNSt6stringEb _CPPv3N10zkAppUtils7zkClass10unlockDataERKNSt6stringEb _CPPv2N10zkAppUtils7zkClass10unlockDataERKNSt6stringEb zkAppUtils::zkClass::unlockData__ssCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ada1f322ad059f421c48af150a5a0beec" names="classzk_app_utils_1_1zk_class_1ada1f322ad059f421c48af150a5a0beec"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">unlockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> std::string &amp;<emphasis>src_ct_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Unlocks a locked data object from a plaintext source file and stores plaintext data in a container of unsigned bytes. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with plaintext data </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_ct_filename</literal>: Absolute path to source file which contains locked data object </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::unlockData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10unlockDataERK9byteArrayb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10unlockDataERK9byteArrayb _CPPv3N10zkAppUtils7zkClass10unlockDataERK9byteArrayb _CPPv2N10zkAppUtils7zkClass10unlockDataERK9byteArrayb zkAppUtils::zkClass::unlockData__byteArrayCR.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a0c33653e5fe062d0784f64e4ac07ce08" names="classzk_app_utils_1_1zk_class_1a0c33653e5fe062d0784f64e4ac07ce08"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">unlockData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>src_ct_bytes</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>use_shared_key</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Unlocks a locked data object contained in an unsigned byte container and stores plaintext data in a container of unsigned bytes. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with plaintext data </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>src_ct_data</literal>: Unsigned byte container which holds locked data object </paragraph></list_item><list_item><paragraph><literal>use_shared_key</literal>: Determines whether one-way or shared key is used for locking. Default = false. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">ECDSA</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genECDSASigFromDigest\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayi _CPPv3N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayi _CPPv2N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayi zkAppUtils::zkClass::genECDSASigFromDigest__byteArrayR.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1aa4da8d53be65803af718a336407ea6d2" names="classzk_app_utils_1_1zk_class_1aa4da8d53be65803af718a336407ea6d2"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">genECDSASigFromDigest</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>digest</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis> = 0</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate a signature from a data digest using the Zymkey’s private key. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with binary signature </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>digest</literal>: Currently, this should be a SHA256 digest </paragraph></list_item><list_item><paragraph><literal>slot</literal>: The key slot to use for verification. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genECDSASigFromDigest\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayR7uint8_ti',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayR7uint8_ti _CPPv3N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayR7uint8_ti _CPPv2N10zkAppUtils7zkClass21genECDSASigFromDigestER9byteArrayR7uint8_ti zkAppUtils::zkClass::genECDSASigFromDigest__byteArrayR.uint8_tR.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a11af5c32dc4d0a87b072e7b056a550e0" names="classzk_app_utils_1_1zk_class_1a11af5c32dc4d0a87b072e7b056a550e0"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">genECDSASigFromDigest</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>digest</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">uint8_t &amp;<emphasis>recovery_id</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis> = 0</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate a signature from a data digest using the Zymkey’s private key. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with binary signature </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>digest</literal>: Currently, this should be a SHA256 digest </paragraph></list_item><list_item><paragraph><literal>slot</literal>: The key slot to use for verification. </paragraph></list_item><list_item><paragraph><literal>recovery_id</literal>: [Output]Returns recovery id value needed for ethereum key recovery. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::verifyECDSASigFromDigest\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass24verifyECDSASigFromDigestER9byteArrayR9byteArrayib',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass24verifyECDSASigFromDigestER9byteArrayR9byteArrayib _CPPv3N10zkAppUtils7zkClass24verifyECDSASigFromDigestER9byteArrayR9byteArrayib _CPPv2N10zkAppUtils7zkClass24verifyECDSASigFromDigestER9byteArrayR9byteArrayib zkAppUtils::zkClass::verifyECDSASigFromDigest__byteArrayR.byteArrayR.i.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a5046d6ddc2fb67c7c352df859c84089d" names="classzk_app_utils_1_1zk_class_1a5046d6ddc2fb67c7c352df859c84089d"></target>bool <desc_name xml:space="preserve">verifyECDSASigFromDigest</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>digest</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>sig</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>pub_key_slot</emphasis> = 0</desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>pub_key_is_foreign</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Verify a signature from a data digest using the Zymkey’s public key. The public key is not given as an input. Rather, the Zymkey uses its own copy of the private key. This insures that the public key that matches the private key is used. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>true = signature verification passed, false = signature verification failed </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>digest</literal>: Currently, this should be a SHA256 digest </paragraph></list_item><list_item><paragraph><literal>sig</literal>: The signature to verify </paragraph></list_item><list_item><paragraph><literal>pub_key_slot</literal>: The key slot to use for verification. </paragraph></list_item><list_item><paragraph><literal>pub_key_is_foreign</literal>: If false, the normal key store is referenced. Otherwise, the foreign public key store is referenced. </paragraph></list_item><list_item><paragraph><literal>pub_key_is_foreign</literal>: If false, the normal key store is referenced. Otherwise, the foreign public key store is referenced. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">ECDH and KDF</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::doRawECDH\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass9doRawECDHEiR9byteArray',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass9doRawECDHEiR9byteArray _CPPv3N10zkAppUtils7zkClass9doRawECDHEiR9byteArray _CPPv2N10zkAppUtils7zkClass9doRawECDHEiR9byteArray zkAppUtils::zkClass::doRawECDH__i.byteArrayR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a094c61c54bcc4c064e961a75ad92c04b" names="classzk_app_utils_1_1zk_class_1a094c61c54bcc4c064e961a75ad92c04b"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">doRawECDH</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>peer_pubkey</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Perform a raw ECDH operation. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>Perform an ECDH operation with no Key Derivation Function (KDF). The raw pre-master secret is returned in the response. The peer public key is presented in the call. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with pre master secret </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>slot</literal>: The key slot to use for the local key. If this parameter is -1, the ephemeral key is used. </paragraph></list_item><list_item><paragraph><literal>peer_pubkey</literal>: The peer public key. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::doRawECDHWithIntPeerPubkey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass26doRawECDHWithIntPeerPubkeyEiib',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass26doRawECDHWithIntPeerPubkeyEiib _CPPv3N10zkAppUtils7zkClass26doRawECDHWithIntPeerPubkeyEiib _CPPv2N10zkAppUtils7zkClass26doRawECDHWithIntPeerPubkeyEiib zkAppUtils::zkClass::doRawECDHWithIntPeerPubkey__i.i.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ac4c9c958cb219943bf590debfff42d8e" names="classzk_app_utils_1_1zk_class_1ac4c9c958cb219943bf590debfff42d8e"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">doRawECDHWithIntPeerPubkey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>peer_pubkey_slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>peer_pubkey_slot_is_foreign</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Perform a raw ECDH operation. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>Perform an ECDH operation with no Key Derivation Function (KDF). The raw pre-master secret is returned in the response. The peer public key is referenced from the zymkey internal key store. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with pre master secret </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>slot</literal>: The key slot to use for the local key. If this parameter is -1, the ephemeral key is used. </paragraph></list_item><list_item><paragraph><literal>peer_pubkey_slot</literal>: The peer public key slot where the peer public key is to be found. </paragraph></list_item><list_item><paragraph><literal>peer_pubkey_slot_is_foreign</literal>: If true, the peer public key slot is found in the foreign public keyring. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::doECDHAndKDF\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass12doECDHAndKDFE16ZK_ECDH_KDF_TYPEiR9byteArrayR9byteArrayR9byteArrayii',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass12doECDHAndKDFE16ZK_ECDH_KDF_TYPEiR9byteArrayR9byteArrayR9byteArrayii _CPPv3N10zkAppUtils7zkClass12doECDHAndKDFE16ZK_ECDH_KDF_TYPEiR9byteArrayR9byteArrayR9byteArrayii _CPPv2N10zkAppUtils7zkClass12doECDHAndKDFE16ZK_ECDH_KDF_TYPEiR9byteArrayR9byteArrayR9byteArrayii zkAppUtils::zkClass::doECDHAndKDF__ZK_ECDH_KDF_TYPE.i.byteArrayR.byteArrayR.byteArrayR.i.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ac969e9bb26200c34d9b80b6b3287fc4f" names="classzk_app_utils_1_1zk_class_1ac969e9bb26200c34d9b80b6b3287fc4f"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">doECDHAndKDF</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_ECDH_KDF_TYPE <emphasis>kdf_type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>peer_pubkey</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>salt</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>info</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>num_iterations</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>derived_key_sz</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Perform an ECDH operation plus Key Derivation Function. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>Perform an ECDH operation with Key Derivation Function (KDF). The derived key is returned in the response. The peer public key is presented in the call. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with pre master secret. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>slot</literal>: The key slot to use for the local key. If this parameter is -1, the ephemeral key is used. </paragraph></list_item><list_item><paragraph><literal>peer_pubkey</literal>: The peer public key. </paragraph></list_item><list_item><paragraph><literal>salt</literal>: The salt to use for the selected KDF. </paragraph></list_item><list_item><paragraph><literal>info</literal>: The info field to use for RFC 5869. Ignored for PBKDF2. </paragraph></list_item><list_item><paragraph><literal>num_iterations</literal>: Number of iterations to carry out (PBKDF only) </paragraph></list_item><list_item><paragraph><literal>derived_key_sz</literal>: The desired number of bytes to return for the KDF. For RFC 5869, this value must be less than 8160 bytes (SHA256) or 16320 (SHA512). </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::doECDHAndKDFWithIntPeerPubkey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass29doECDHAndKDFWithIntPeerPubkeyE16ZK_ECDH_KDF_TYPEiibR9byteArrayR9byteArrayii',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass29doECDHAndKDFWithIntPeerPubkeyE16ZK_ECDH_KDF_TYPEiibR9byteArrayR9byteArrayii _CPPv3N10zkAppUtils7zkClass29doECDHAndKDFWithIntPeerPubkeyE16ZK_ECDH_KDF_TYPEiibR9byteArrayR9byteArrayii _CPPv2N10zkAppUtils7zkClass29doECDHAndKDFWithIntPeerPubkeyE16ZK_ECDH_KDF_TYPEiibR9byteArrayR9byteArrayii zkAppUtils::zkClass::doECDHAndKDFWithIntPeerPubkey__ZK_ECDH_KDF_TYPE.i.i.b.byteArrayR.byteArrayR.i.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ad76f1a1781c845623194d7d3e420796f" names="classzk_app_utils_1_1zk_class_1ad76f1a1781c845623194d7d3e420796f"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">doECDHAndKDFWithIntPeerPubkey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_ECDH_KDF_TYPE <emphasis>kdf_type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>peer_pubkey_slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>peer_pubkey_slot_is_foreign</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>salt</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>info</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>num_iterations</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>derived_key_sz</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Perform an ECDH operation plus Key Derivation Function. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>Perform an ECDH operation with Key Derivation Function (KDF). The derived key is returned in the response. The peer public key is referenced from the zymkey internal key store. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with pre master secret. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>slot</literal>: The key slot to use for the local key. If this parameter is -1, the ephemeral key is used. </paragraph></list_item><list_item><paragraph><literal>peer_pubkey_slot</literal>: The peer public key slot where the peer public key is to be found. </paragraph></list_item><list_item><paragraph><literal>peer_pubkey_slot_is_foreign</literal>: If true, the peer public key slot is found in the foreign public keyring. </paragraph></list_item><list_item><paragraph><literal>salt</literal>: The salt to use for the selected KDF. </paragraph></list_item><list_item><paragraph><literal>info</literal>: The info field to use for RFC 5869. Ignored for PBKDF2. </paragraph></list_item><list_item><paragraph><literal>num_iterations</literal>: Number of iterations to carry out (PBKDF only) </paragraph></list_item><list_item><paragraph><literal>derived_key_sz</literal>: The desired number of bytes to return for the KDF. For RFC 5869, this value must be less than 8160 bytes (SHA256) or 16320 (SHA512). </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Key Management</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::saveECDSAPubKey2File\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass20saveECDSAPubKey2FileENSt6stringEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass20saveECDSAPubKey2FileENSt6stringEi _CPPv3N10zkAppUtils7zkClass20saveECDSAPubKey2FileENSt6stringEi _CPPv2N10zkAppUtils7zkClass20saveECDSAPubKey2FileENSt6stringEi zkAppUtils::zkClass::saveECDSAPubKey2File__ss.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a90e0ace2d84e42b6ccdaad122f9035c8" names="classzk_app_utils_1_1zk_class_1a90e0ace2d84e42b6ccdaad122f9035c8"></target>void <desc_name xml:space="preserve">saveECDSAPubKey2File</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>dst_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis> = 0</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>[DEPRECATED] Use exportPubKey2File. Save the public key that matches the Zymkey’s private key into a PEM formatted file. Mainly used for Certificate Signing Request (CSR) generation. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>dst_filename</literal>: Absolute location where the PEM formatted file is to be stored </paragraph></list_item><list_item><paragraph><literal>slot</literal>: Reserved for future use </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::exportPubKey2File\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass17exportPubKey2FileENSt6stringEib',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass17exportPubKey2FileENSt6stringEib _CPPv3N10zkAppUtils7zkClass17exportPubKey2FileENSt6stringEib _CPPv2N10zkAppUtils7zkClass17exportPubKey2FileENSt6stringEib zkAppUtils::zkClass::exportPubKey2File__ss.i.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a1bdc2d2f9d479a28af6de6cd7889020b" names="classzk_app_utils_1_1zk_class_1a1bdc2d2f9d479a28af6de6cd7889020b"></target>void <desc_name xml:space="preserve">exportPubKey2File</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>dst_filename</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>pubkey_slot</emphasis> = 0</desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>slot_is_foreign</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Store the public key to a host file in PEM format. </paragraph>
                                    <paragraph>This function is useful for generating Certificate Signing Requests (CSR). <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>dst_filename</literal>: Filename where PEM formatted public key is to be stored. </paragraph></list_item><list_item><paragraph><literal>pubkey_slot</literal>: The key slot to retrieve. Zymkey and HSM4 have slots 0, 1, and 2. </paragraph></list_item><list_item><paragraph><literal>slot_is_foreign</literal>: If true, designates the pubkey slot to come from the foreign keystore. (Supported Devices: HSM6, Secure Compute Module) </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getECDSAPubKey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass14getECDSAPubKeyEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass14getECDSAPubKeyEi _CPPv3N10zkAppUtils7zkClass14getECDSAPubKeyEi _CPPv2N10zkAppUtils7zkClass14getECDSAPubKeyEi zkAppUtils::zkClass::getECDSAPubKey__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a545db81233e96730f9d33af01b6983b4" names="classzk_app_utils_1_1zk_class_1a545db81233e96730f9d33af01b6983b4"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">getECDSAPubKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis> = 0</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>[DEPRECATED] Use exportPubKey. Get a container of bytes which contains the ECDSA public key </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Byte container with binary public key </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>slot</literal>: Reserved for future use. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::exportPubKey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass12exportPubKeyEib',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass12exportPubKeyEib _CPPv3N10zkAppUtils7zkClass12exportPubKeyEib _CPPv2N10zkAppUtils7zkClass12exportPubKeyEib zkAppUtils::zkClass::exportPubKey__i.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ae13277c55222907a21537b790279d214" names="classzk_app_utils_1_1zk_class_1ae13277c55222907a21537b790279d214"></target><reference internal="True" refid="_CPPv410zkAppUtils" reftitle="zkAppUtils">zkAppUtils</reference>::<reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<desc_name xml:space="preserve">exportPubKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>pubkey_slot</emphasis> = 0</desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>slot_is_foreign</emphasis> = 0</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Gets the public key and stores in a byte array created by this function. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>pubkey_slot</literal>: The key slot to retrieve. Zymkey and HSM4 have slots 0, 1, and 2. </paragraph></list_item><list_item><paragraph><literal>slot_is_foreign</literal>: If true, designates the pubkey slot to come from the foreign keystore. (Supported Devices: HSM6, Secure Compute Module) </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getAllocSlotsList\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass17getAllocSlotsListEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass17getAllocSlotsListEb _CPPv3N10zkAppUtils7zkClass17getAllocSlotsListEb _CPPv2N10zkAppUtils7zkClass17getAllocSlotsListEb zkAppUtils::zkClass::getAllocSlotsList__b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a636729b4700e21c3392bd75aac2d8873" names="classzk_app_utils_1_1zk_class_1a636729b4700e21c3392bd75aac2d8873"></target><reference internal="True" reftitle="zkAppUtils::intArray" refuri="_api/typedef_zk_app_utils_class_8h_1a7cc12af0cdc6374a29588629bd450da6#_CPPv4N10zkAppUtils8intArrayE">intArray</reference> *<desc_name xml:space="preserve">getAllocSlotsList</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>foreign_key_pool</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get the list of allocated keys. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function returns a list of all allocated key slots. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Array of the allocated keys. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>foreign_key_pool</literal>: (input) if true, retrieve allocation list of the foreign keys </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::storeForeignPubKey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass18storeForeignPubKeyE14ZK_EC_KEY_TYPER9byteArray',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass18storeForeignPubKeyE14ZK_EC_KEY_TYPER9byteArray _CPPv3N10zkAppUtils7zkClass18storeForeignPubKeyE14ZK_EC_KEY_TYPER9byteArray _CPPv2N10zkAppUtils7zkClass18storeForeignPubKeyE14ZK_EC_KEY_TYPER9byteArray zkAppUtils::zkClass::storeForeignPubKey__ZK_EC_KEY_TYPE.byteArrayR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1aa95d4e59e180197bf8e847b4d52d5001" names="classzk_app_utils_1_1zk_class_1aa95d4e59e180197bf8e847b4d52d5001"></target>int <desc_name xml:space="preserve">storeForeignPubKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>pk_type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>pk</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Store a new foreign public key in Zymkey. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function stores a new foreign public key in the Zymkey public key ring. This public key can be used for signature verification in use cases where it is desirable to hide the public key. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Allocated slot number in foreign key store, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>pk_type</literal>: The type of the public key. {ZK_NISTP256, ZK_SECP256R1 = ZK_NISTP256, ZK_SECP256K1} </paragraph></list_item><list_item><paragraph><literal>pk</literal>: Public key to store. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::disablePubKeyExport\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass19disablePubKeyExportEib',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass19disablePubKeyExportEib _CPPv3N10zkAppUtils7zkClass19disablePubKeyExportEib _CPPv2N10zkAppUtils7zkClass19disablePubKeyExportEib zkAppUtils::zkClass::disablePubKeyExport__i.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ab730469e9e5ffb217455a775960732d1" names="classzk_app_utils_1_1zk_class_1ab730469e9e5ffb217455a775960732d1"></target>void <desc_name xml:space="preserve">disablePubKeyExport</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>pubkey_slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>slot_is_foreign</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Prevent a public key from being exported to the host. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function prevents the public key at the specified slot from being exported to the host using the API zkExportPubKey. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>pubkey_slot</literal>: The key slot to disable pubkey export on. </paragraph></list_item><list_item><paragraph><literal>slot_is_foreign</literal>: The slot parameter refers to a slot in the foreign keyring. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genKeyPair\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10genKeyPairE14ZK_EC_KEY_TYPE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10genKeyPairE14ZK_EC_KEY_TYPE _CPPv3N10zkAppUtils7zkClass10genKeyPairE14ZK_EC_KEY_TYPE _CPPv2N10zkAppUtils7zkClass10genKeyPairE14ZK_EC_KEY_TYPE zkAppUtils::zkClass::genKeyPair__ZK_EC_KEY_TYPE" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1afa4595edba19c2c98109763898dbfc9a" names="classzk_app_utils_1_1zk_class_1afa4595edba19c2c98109763898dbfc9a"></target>int <desc_name xml:space="preserve">genKeyPair</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate a new persistent key pair. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function generates a new key pair of the specified type and store it persistently. This key pair cannot be used as part of the zymkey’s digital wallet operations. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Allocated slot number if successful, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>type</literal>: The type of key to generate (ZK_EC_KEY_TYPE). {ZK_NISTP256, ZK_SECP256R1 = ZK_NISTP256, ZK_SECP256K1} </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genEphemeralKeyPair\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass19genEphemeralKeyPairE14ZK_EC_KEY_TYPE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass19genEphemeralKeyPairE14ZK_EC_KEY_TYPE _CPPv3N10zkAppUtils7zkClass19genEphemeralKeyPairE14ZK_EC_KEY_TYPE _CPPv2N10zkAppUtils7zkClass19genEphemeralKeyPairE14ZK_EC_KEY_TYPE zkAppUtils::zkClass::genEphemeralKeyPair__ZK_EC_KEY_TYPE" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ada05198c035f694fda303a8b7e30b4b5" names="classzk_app_utils_1_1zk_class_1ada05198c035f694fda303a8b7e30b4b5"></target>void <desc_name xml:space="preserve">genEphemeralKeyPair</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate an ephemeral key pair. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function generates an ephemeral key pair of the specified type. Ephemeral key pairs are useful when performing ECDH for time-of-flight encryption. Only one ephemeral key slot is available and is not persistent between reboots. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>type</literal>: The type of key to generate (ZK_EC_KEY_TYPE). {ZK_NISTP256, ZK_SECP256R1 = ZK_NISTP256, ZK_SECP256K1} </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::removeKey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass9removeKeyEib',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass9removeKeyEib _CPPv3N10zkAppUtils7zkClass9removeKeyEib _CPPv2N10zkAppUtils7zkClass9removeKeyEib zkAppUtils::zkClass::removeKey__i.b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a62f486dc7c3502fd49c43f628a48fd62" names="classzk_app_utils_1_1zk_class_1a62f486dc7c3502fd49c43f628a48fd62"></target>void <desc_name xml:space="preserve">removeKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>slot_is_foreign</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Remove a key pair or a foreign public key. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function deletes a key pair or a foreign public key from persistent storage. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>slot</literal>: The slot </paragraph></list_item><list_item><paragraph><literal>slot_is_foreign</literal>: The slot parameter refers to a slot in the foreign keyring. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::invalidateEphemeralKey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass22invalidateEphemeralKeyEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass22invalidateEphemeralKeyEv _CPPv3N10zkAppUtils7zkClass22invalidateEphemeralKeyEv _CPPv2N10zkAppUtils7zkClass22invalidateEphemeralKeyEv zkAppUtils::zkClass::invalidateEphemeralKey" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a2b2d25ba5fa9e7ddd56e293aeac069c6" names="classzk_app_utils_1_1zk_class_1a2b2d25ba5fa9e7ddd56e293aeac069c6"></target>void <desc_name xml:space="preserve">invalidateEphemeralKey</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Invalidate the ephemeral key. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function invalidates the ephemeral key. <definition_list><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Digital Wallet (BIP32/39/44)</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genWalletMasterSeed\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK24recoveryStrategyBaseTypeRK9byteArray',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK24recoveryStrategyBaseTypeRK9byteArray _CPPv3N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK24recoveryStrategyBaseTypeRK9byteArray _CPPv2N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK24recoveryStrategyBaseTypeRK9byteArray zkAppUtils::zkClass::genWalletMasterSeed__ZK_EC_KEY_TYPE.ssR.recoveryStrategyBaseTypeCR.byteArrayCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a9a0b6ea782bbe1b628a821a0ad42a0ed" names="classzk_app_utils_1_1zk_class_1a9a0b6ea782bbe1b628a821a0ad42a0ed"></target>int <desc_name xml:space="preserve">genWalletMasterSeed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>wallet_name</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::recoveryStrategyBaseType" refuri="_api/classzk_app_utils_1_1recovery_strategy_base_type#_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeE">recoveryStrategyBaseType</reference> &amp;<emphasis>recovery_strategy</emphasis> = <reference internal="True" reftitle="zkAppUtils::recoveryStrategyBaseType" refuri="_api/classzk_app_utils_1_1recovery_strategy_base_type#_CPPv4N10zkAppUtils24recoveryStrategyBaseTypeE">recoveryStrategyBaseType</reference>()</desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>master_generator_key</emphasis> = <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference>()</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate a BIP32 master seed to start a new blockchain wallet. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function generates a new blockchain master seed for creating a new wallet per BIP32. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The slot the master seed was allocated to. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>type</literal>: The type of key to generate (ZK_EC_KEY_TYPE). {ZK_NISTP256, ZK_SECP256R1 = ZK_NISTP256, ZK_SECP256K1, ZK_ED25519, ZK_X25519} </paragraph></list_item><list_item><paragraph><literal>wallet_name</literal>: An ASCII string which contains the name of the wallet. </paragraph></list_item><list_item><paragraph><literal>mnemonics(output)</literal>: Allocated mnemonics if it was asked for, based on recovery strategy used. </paragraph></list_item><list_item><paragraph><literal>master_generator_key</literal>: The master generator key used to help generate the master seed (bip32). Defaults to empty string </paragraph></list_item><list_item><paragraph><literal>recovery_strategy</literal>: The recovery strategy object for returning BIP39 or SLIP39 (starts a SLIP39 session instead of a one shot). Also contains key variants and passphrases. Defaults to no recovery strategy. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genWalletMasterSeed\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK21recoveryStrategyBIP39PNSt6stringERK9byteArray',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK21recoveryStrategyBIP39PNSt6stringERK9byteArray _CPPv3N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK21recoveryStrategyBIP39PNSt6stringERK9byteArray _CPPv2N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK21recoveryStrategyBIP39PNSt6stringERK9byteArray zkAppUtils::zkClass::genWalletMasterSeed__ZK_EC_KEY_TYPE.ssR.recoveryStrategyBIP39CR.ssP.byteArrayCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1acb12f4443c3d7b0fdc81f9cb18f78381" names="classzk_app_utils_1_1zk_class_1acb12f4443c3d7b0fdc81f9cb18f78381"></target>int <desc_name xml:space="preserve">genWalletMasterSeed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>wallet_name</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::recoveryStrategyBIP39" refuri="_api/classzk_app_utils_1_1recovery_strategy_b_i_p39#_CPPv4N10zkAppUtils21recoveryStrategyBIP39E">recoveryStrategyBIP39</reference> &amp;<emphasis>recovery_strategy</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string *<emphasis>mnemonic_str</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>master_generator_key</emphasis> = <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference>()</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genWalletMasterSeed\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK22recoveryStrategySLIP39RK9byteArray',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK22recoveryStrategySLIP39RK9byteArray _CPPv3N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK22recoveryStrategySLIP39RK9byteArray _CPPv2N10zkAppUtils7zkClass19genWalletMasterSeedE14ZK_EC_KEY_TYPERNSt6stringERK22recoveryStrategySLIP39RK9byteArray zkAppUtils::zkClass::genWalletMasterSeed__ZK_EC_KEY_TYPE.ssR.recoveryStrategySLIP39CR.byteArrayCR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1add63278d1061e559bfc2509e2cf0febc" names="classzk_app_utils_1_1zk_class_1add63278d1061e559bfc2509e2cf0febc"></target>int <desc_name xml:space="preserve">genWalletMasterSeed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>wallet_name</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::recoveryStrategySLIP39" refuri="_api/classzk_app_utils_1_1recovery_strategy_s_l_i_p39#_CPPv4N10zkAppUtils22recoveryStrategySLIP39E">recoveryStrategySLIP39</reference> &amp;<emphasis>recovery_strategy</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><desc_annotation xml:space="preserve">const</desc_annotation> <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>master_generator_key</emphasis> = <reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference>()</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setGenSLIP39GroupInfo\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass21setGenSLIP39GroupInfoEiii',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass21setGenSLIP39GroupInfoEiii _CPPv3N10zkAppUtils7zkClass21setGenSLIP39GroupInfoEiii _CPPv2N10zkAppUtils7zkClass21setGenSLIP39GroupInfoEiii zkAppUtils::zkClass::setGenSLIP39GroupInfo__i.i.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a537a3e6d65d177082a82ef569c212947" names="classzk_app_utils_1_1zk_class_1a537a3e6d65d177082a82ef569c212947"></target>int <desc_name xml:space="preserve">setGenSLIP39GroupInfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>group_index</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>member_count</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>member_threshold</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set the active SLIP39 group and the amount of members needed. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function configures the active group to generate the number of shards requested for the active group. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>0 if successful on configuring the active group, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>group_index</literal>: The index of the group to generate shards from. Index starts at 0. </paragraph></list_item><list_item><paragraph><literal>member_count</literal>: The total amount of member shards in this group to generate. </paragraph></list_item><list_item><paragraph><literal>member_threshold</literal>: The number of member shards needed to recreate this group in recovery. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::addGenSLIP39Member\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass18addGenSLIP39MemberENSt6stringEPNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass18addGenSLIP39MemberENSt6stringEPNSt6stringE _CPPv3N10zkAppUtils7zkClass18addGenSLIP39MemberENSt6stringEPNSt6stringE _CPPv2N10zkAppUtils7zkClass18addGenSLIP39MemberENSt6stringEPNSt6stringE zkAppUtils::zkClass::addGenSLIP39Member__ss.ssP" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1af96fe0fcaa53a74e799f18ce7715fc5e" names="classzk_app_utils_1_1zk_class_1af96fe0fcaa53a74e799f18ce7715fc5e"></target>int <desc_name xml:space="preserve">addGenSLIP39Member</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>passphrase</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string *<emphasis>mnemonic_str</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate a new SLIP39 member shard. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function generates a new SLIP39 member shard. The shard can optionally have a password attached to it. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>0 if successful on configuring the active group, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>passphrase</literal>: Password for the shard. Can be empty string. </paragraph></list_item><list_item><paragraph><literal>mnemonic_str</literal>: (output) The mnemonic sentence of the shard. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::cancelSLIP39Session\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass19cancelSLIP39SessionEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass19cancelSLIP39SessionEv _CPPv3N10zkAppUtils7zkClass19cancelSLIP39SessionEv _CPPv2N10zkAppUtils7zkClass19cancelSLIP39SessionEv zkAppUtils::zkClass::cancelSLIP39Session" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a00d207abd7552ce2df19244be76ea1c7" names="classzk_app_utils_1_1zk_class_1a00d207abd7552ce2df19244be76ea1c7"></target>int <desc_name xml:space="preserve">cancelSLIP39Session</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Cancels the current active SLIP39 session (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function cancels open active SLIP39 sessions. For both generation and restore SLIP39 sessions. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>0 if successful on configuring the active group, less than 0 for failure. </paragraph></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genOverSightWallet\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass18genOverSightWalletE14ZK_EC_KEY_TYPER9byteArrayR9byteArrayRNSt6stringERNSt6stringERNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass18genOverSightWalletE14ZK_EC_KEY_TYPER9byteArrayR9byteArrayRNSt6stringERNSt6stringERNSt6stringE _CPPv3N10zkAppUtils7zkClass18genOverSightWalletE14ZK_EC_KEY_TYPER9byteArrayR9byteArrayRNSt6stringERNSt6stringERNSt6stringE _CPPv2N10zkAppUtils7zkClass18genOverSightWalletE14ZK_EC_KEY_TYPER9byteArrayR9byteArrayRNSt6stringERNSt6stringERNSt6stringE zkAppUtils::zkClass::genOverSightWallet__ZK_EC_KEY_TYPE.byteArrayR.byteArrayR.ssR.ssR.ssR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a9a5cd46173cdcbd018ec8672d7256110" names="classzk_app_utils_1_1zk_class_1a9a5cd46173cdcbd018ec8672d7256110"></target>int <desc_name xml:space="preserve">genOverSightWallet</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>public_key</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>chain_code</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>node_address</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>wallet_name</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>variant</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate a oversight wallet from the last hardened node of a wallet node address (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function generates a new oversight wallet and are used to generate public keys in a deterministic way. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The slot the oversight wallet was allocated to. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>type</literal>: The type of key to generate (ZK_EC_KEY_TYPE). {ZK_NISTP256, ZK_SECP256R1 = ZK_NISTP256, ZK_SECP256K1, ZK_ED25519, ZK_X25519} </paragraph></list_item><list_item><paragraph><literal>public_key</literal>: The public_key of the last hardened node of the address. </paragraph></list_item><list_item><paragraph><literal>chain_code</literal>: The chain_code of the last hardened node of the address. </paragraph></list_item><list_item><paragraph><literal>node_address</literal>: The node_address being derived from. </paragraph></list_item><list_item><paragraph><literal>wallet_name</literal>: An ASCII string which contains the name of the wallet. </paragraph></list_item><list_item><paragraph><literal>variant</literal>: The key type variant to generate. Currently only “cardano” for ed25519 is supported. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::genWalletChildKey\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass17genWalletChildKeyEi8uint32_tbbP9byteArray',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass17genWalletChildKeyEi8uint32_tbbP9byteArray _CPPv3N10zkAppUtils7zkClass17genWalletChildKeyEi8uint32_tbbP9byteArray _CPPv2N10zkAppUtils7zkClass17genWalletChildKeyEi8uint32_tbbP9byteArray zkAppUtils::zkClass::genWalletChildKey__i.uint32_t.b.b.byteArrayP" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1aa3a204a5d059bf18f7dda922767ee4ff" names="classzk_app_utils_1_1zk_class_1aa3a204a5d059bf18f7dda922767ee4ff"></target>int <desc_name xml:space="preserve">genWalletChildKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>parent_key_slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">uint32_t <emphasis>index</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>is_hardened</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>return_chain_code</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> *<emphasis>chain_code</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Generate child key from a parent key in a wallet (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function generates a new child key descendent from a specified parent key in a wallet. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Allocated slot number if successful, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>parent_key_slot</literal>: The parent key slot to base the child key derivation on. </paragraph></list_item><list_item><paragraph><literal>index</literal>: The index of the child seed. This determines the node address as well as the outcome of the key generation. </paragraph></list_item><list_item><paragraph><literal>is_hardened</literal>: If true, a hardened key is generated. </paragraph></list_item><list_item><paragraph><literal>return_chain_code</literal>: If true, exports the chain code. Must be exported from a hardened node. </paragraph></list_item><list_item><paragraph><literal>(output)</literal>: Allocated chain_code if it was asked for. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::restoreWalletMasterSeedFromMnemonic\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR21recoveryStrategyBIP39RNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR21recoveryStrategyBIP39RNSt6stringE _CPPv3N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR21recoveryStrategyBIP39RNSt6stringE _CPPv2N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR21recoveryStrategyBIP39RNSt6stringE zkAppUtils::zkClass::restoreWalletMasterSeedFromMnemonic__ZK_EC_KEY_TYPE.ssR.byteArrayR.recoveryStrategyBIP39R.ssR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a528b0cec60d7b2a122fc59c8665437ad" names="classzk_app_utils_1_1zk_class_1a528b0cec60d7b2a122fc59c8665437ad"></target>int <desc_name xml:space="preserve">restoreWalletMasterSeedFromMnemonic</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>wallet_name</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>master_generator_key</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::recoveryStrategyBIP39" refuri="_api/classzk_app_utils_1_1recovery_strategy_b_i_p39#_CPPv4N10zkAppUtils21recoveryStrategyBIP39E">recoveryStrategyBIP39</reference> &amp;<emphasis>recovery_strategy</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>mnemonic_str</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Restore a master seed from a BIP39 mnemonic and a master generator key. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function restores a wallet master seed from a supplied BIP39 mnemonic string and a master generator key. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>Allocated slot number if successful, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>type</literal>: The type of key to generate (ZK_KEY_TYPE). {ZK_NISTP256, ZK_SECP256R1 = ZK_NISTP256, ZK_SECP256K1} </paragraph></list_item><list_item><paragraph><literal>wallet_name</literal>: An ASCII string which contains the name of the wallet. </paragraph></list_item><list_item><paragraph><literal>master_generator_key</literal>: The master generator key used to help generate the master seed. </paragraph></list_item><list_item><paragraph><literal>recovery_strategy</literal>: The recovery strategy used. Contains the passphrases and key variant to recover from. </paragraph></list_item><list_item><paragraph><literal>mnemonic_str</literal>: The mnemonic sentence to recover the master seed with. (Not used for SLIP39) </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::restoreWalletMasterSeedFromMnemonic\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR22recoveryStrategySLIP39',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR22recoveryStrategySLIP39 _CPPv3N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR22recoveryStrategySLIP39 _CPPv2N10zkAppUtils7zkClass35restoreWalletMasterSeedFromMnemonicE14ZK_EC_KEY_TYPERNSt6stringER9byteArrayR22recoveryStrategySLIP39 zkAppUtils::zkClass::restoreWalletMasterSeedFromMnemonic__ZK_EC_KEY_TYPE.ssR.byteArrayR.recoveryStrategySLIP39R" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a276a007de13b1372718e00fefba393cb" names="classzk_app_utils_1_1zk_class_1a276a007de13b1372718e00fefba393cb"></target>int <desc_name xml:space="preserve">restoreWalletMasterSeedFromMnemonic</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_EC_KEY_TYPE <emphasis>type</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>wallet_name</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::byteArray" refuri="_api/typedef_zk_app_utils_class_8h_1a8cb247b41a182478fcdf780c1ce524e3#_CPPv4N10zkAppUtils9byteArrayE">byteArray</reference> &amp;<emphasis>master_generator_key</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::recoveryStrategySLIP39" refuri="_api/classzk_app_utils_1_1recovery_strategy_s_l_i_p39#_CPPv4N10zkAppUtils22recoveryStrategySLIP39E">recoveryStrategySLIP39</reference> &amp;<emphasis>recovery_strategy</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::addRestoreSLIP39Mnemonic\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass24addRestoreSLIP39MnemonicENSt6stringENSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass24addRestoreSLIP39MnemonicENSt6stringENSt6stringE _CPPv3N10zkAppUtils7zkClass24addRestoreSLIP39MnemonicENSt6stringENSt6stringE _CPPv2N10zkAppUtils7zkClass24addRestoreSLIP39MnemonicENSt6stringENSt6stringE zkAppUtils::zkClass::addRestoreSLIP39Mnemonic__ss.ss" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a48243e710fd42c4b73c73c69d074e61b" names="classzk_app_utils_1_1zk_class_1a48243e710fd42c4b73c73c69d074e61b"></target>int <desc_name xml:space="preserve">addRestoreSLIP39Mnemonic</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>passphrase</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>mnemonic_sentence</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Feed a SLIP39 shard to restore a master seed (Supported Devices: HSM6, Secure Compute Module). </paragraph>
                                    <paragraph>This function will feed a shard to the module until the conditions are met and a master seed is generated. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>allocated slot number when all shards required are fed in, less than 0 for no change. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>passphrase</literal>: The passphrase that was attached to the shard. </paragraph></list_item><list_item><paragraph><literal>mnemonic_sentence</literal>: (output) The twenty-four word sentence mnemonic shard. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getWalletNodeAddrFromKeySlot\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass28getWalletNodeAddrFromKeySlotEiPNSt6stringEPNSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass28getWalletNodeAddrFromKeySlotEiPNSt6stringEPNSt6stringE _CPPv3N10zkAppUtils7zkClass28getWalletNodeAddrFromKeySlotEiPNSt6stringEPNSt6stringE _CPPv2N10zkAppUtils7zkClass28getWalletNodeAddrFromKeySlotEiPNSt6stringEPNSt6stringE zkAppUtils::zkClass::getWalletNodeAddrFromKeySlot__i.ssP.ssP" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a62bc7fcc98b1b71507a959451322fc31" names="classzk_app_utils_1_1zk_class_1a62bc7fcc98b1b71507a959451322fc31"></target>int <desc_name xml:space="preserve">getWalletNodeAddrFromKeySlot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string *<emphasis>out_node_addr</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string *<emphasis>out_wallet_name</emphasis> = NULL</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Derive the node address from a key slot number. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function derives a node address from an input key slot number. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The master seed key slot. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>slot</literal>: (input) A key slot number that is part of a digital wallet. </paragraph></list_item><list_item><paragraph><literal>out_node_addr</literal>: (output) A pointer to a string which will contain the node address in ASCII. </paragraph></list_item><list_item><paragraph><literal>wallet_name</literal>: (output) A pointer to a string which will contain the wallet name in ASCII. If NULL, this parameter will not be retrieved. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getWalletKeySlotFromNodeAddr\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass28getWalletKeySlotFromNodeAddrERNSt6stringERNSt6stringEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass28getWalletKeySlotFromNodeAddrERNSt6stringERNSt6stringEi _CPPv3N10zkAppUtils7zkClass28getWalletKeySlotFromNodeAddrERNSt6stringERNSt6stringEi _CPPv2N10zkAppUtils7zkClass28getWalletKeySlotFromNodeAddrERNSt6stringERNSt6stringEi zkAppUtils::zkClass::getWalletKeySlotFromNodeAddr__ssR.ssR.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1af955d4038166b61c98da8d6a03796f1c" names="classzk_app_utils_1_1zk_class_1af955d4038166b61c98da8d6a03796f1c"></target>int <desc_name xml:space="preserve">getWalletKeySlotFromNodeAddr</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>node_addr</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">std::string &amp;<emphasis>wallet_name</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>master_seed_slot</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Derive the slot address from a node address. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function returns the slot number associated with a given node address. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The associated key slot. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>node_addr</literal>: (input) A pointer which contains the node address in ASCII. </paragraph></list_item><list_item><paragraph><literal>wallet_name</literal>: (input) A pointer which contains the wallet name in ASCII, used to identify the wallet identity. If desired, this parameter can be NULL and the master_seed_slot parameter can be specified instead. </paragraph></list_item><list_item><paragraph><literal>master_seed_slot</literal>: (input) The master seed slot. Can be used to specify the wallet identity instead of the wallet name. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">LED Control</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::ledOff\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass6ledOffEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass6ledOffEv _CPPv3N10zkAppUtils7zkClass6ledOffEv _CPPv2N10zkAppUtils7zkClass6ledOffEv zkAppUtils::zkClass::ledOff" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a0071ea33df7fcddd04d53c1314d535c3" names="classzk_app_utils_1_1zk_class_1a0071ea33df7fcddd04d53c1314d535c3"></target>void <desc_name xml:space="preserve">ledOff</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Turn LED off. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::ledOn\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass5ledOnEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass5ledOnEv _CPPv3N10zkAppUtils7zkClass5ledOnEv _CPPv2N10zkAppUtils7zkClass5ledOnEv zkAppUtils::zkClass::ledOn" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a8531fbc0c9c218131d8e583d5275c8c9" names="classzk_app_utils_1_1zk_class_1a8531fbc0c9c218131d8e583d5275c8c9"></target>void <desc_name xml:space="preserve">ledOn</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Turn LED on. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::ledFlash\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass8ledFlashE8uint32_t8uint32_t8uint32_t',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass8ledFlashE8uint32_t8uint32_t8uint32_t _CPPv3N10zkAppUtils7zkClass8ledFlashE8uint32_t8uint32_t8uint32_t _CPPv2N10zkAppUtils7zkClass8ledFlashE8uint32_t8uint32_t8uint32_t zkAppUtils::zkClass::ledFlash__uint32_t.uint32_t.uint32_t" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a40f09d223beda138c8cb94fb6104caca" names="classzk_app_utils_1_1zk_class_1a40f09d223beda138c8cb94fb6104caca"></target>void <desc_name xml:space="preserve">ledFlash</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">uint32_t <emphasis>on_ms</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">uint32_t <emphasis>off_ms</emphasis> = 0</desc_parameter><desc_parameter noemph="True" xml:space="preserve">uint32_t <emphasis>num_flashes</emphasis> = 0</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Flash LED a certain number of times. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>on_ms</literal>: Number of milliseconds that the LED will be on during a flash cycle </paragraph></list_item><list_item><paragraph><literal>off_ms</literal>: Number of milliseconds that the LED will be off during a flash cycle </paragraph></list_item><list_item><paragraph><literal>num_flashes</literal>: Number of flash cycles to execute. 0 = infinite. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Administrative</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setI2CAddr\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10setI2CAddrEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10setI2CAddrEi _CPPv3N10zkAppUtils7zkClass10setI2CAddrEi _CPPv2N10zkAppUtils7zkClass10setI2CAddrEi zkAppUtils::zkClass::setI2CAddr__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1acd808f1709fcc0a8cdda9de14763ff1b" names="classzk_app_utils_1_1zk_class_1acd808f1709fcc0a8cdda9de14763ff1b"></target>void <desc_name xml:space="preserve">setI2CAddr</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>addr</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Sets the i2c address (i2c versions only). Used in case of i2c bus device address conflict. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>addr</literal>: The i2c address to set. Upon successful change, the Zymkey will reset itself. However, if the address is the same as the current setting, the Zymkey will not reset. Valid address ranges are 0x30 - 0x37 and 0x60 - 0x67. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Time</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getTime\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass7getTimeEb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass7getTimeEb _CPPv3N10zkAppUtils7zkClass7getTimeEb _CPPv2N10zkAppUtils7zkClass7getTimeEb zkAppUtils::zkClass::getTime__b" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ac31d4badb6328045e8cab672e3394018" names="classzk_app_utils_1_1zk_class_1ac31d4badb6328045e8cab672e3394018"></target>uint32_t <desc_name xml:space="preserve">getTime</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">bool <emphasis>precise_time</emphasis> = false</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get current GMT time. </paragraph>
                                    <paragraph>This method is called to get the time directly from a Zymkey’s Real Time Clock (RTC) <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The time in seconds from the epoch (Jan. 1, 1970). </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>precise_time</literal>: (input) If true, this API returns the time after the next second falls. This means that the caller could be blocked up to one second. If false, the API returns immediately with the current time reading. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Accelerometer</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setTapSensitivity\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass17setTapSensitivityEf18ZK_ACCEL_AXIS_TYPE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass17setTapSensitivityEf18ZK_ACCEL_AXIS_TYPE _CPPv3N10zkAppUtils7zkClass17setTapSensitivityEf18ZK_ACCEL_AXIS_TYPE _CPPv2N10zkAppUtils7zkClass17setTapSensitivityEf18ZK_ACCEL_AXIS_TYPE zkAppUtils::zkClass::setTapSensitivity__float.ZK_ACCEL_AXIS_TYPE" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ac9d8a6cc388eaf2b37099929da776a59" names="classzk_app_utils_1_1zk_class_1ac9d8a6cc388eaf2b37099929da776a59"></target>void <desc_name xml:space="preserve">setTapSensitivity</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">float <emphasis>pct</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">ZK_ACCEL_AXIS_TYPE <emphasis>axis</emphasis> = ZK_ACCEL_AXIS_ALL</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Sets the sensitivity of the tap detection as a percentage for an individual axis or all axes. </paragraph>
                                    <paragraph><definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>pct</literal>: Sensitivity expressed in percentage. 0% = off, 100% = maximum. </paragraph></list_item><list_item><paragraph><literal>axis</literal>: X, Y, Z or all (default). </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::waitForTap\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10waitForTapE8uint32_t',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10waitForTapE8uint32_t _CPPv3N10zkAppUtils7zkClass10waitForTapE8uint32_t _CPPv2N10zkAppUtils7zkClass10waitForTapE8uint32_t zkAppUtils::zkClass::waitForTap__uint32_t" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ab00515782c453df5103905b5058fc21f" names="classzk_app_utils_1_1zk_class_1ab00515782c453df5103905b5058fc21f"></target>void <desc_name xml:space="preserve">waitForTap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">uint32_t <emphasis>timeout_ms</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Wait for a tap event to be detected. </paragraph>
                                    <paragraph>This function is called in order to wait for a tap event to occur. This function blocks the calling thread unless called with a timeout of zero. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>timeout_ms</literal>: (input) The maximum amount of time in milliseconds to wait for a tap event to arrive. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsTimeoutException</literal>: upon timeout or zkAppUtilsException upon other errors </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getAccelerometerData\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass20getAccelerometerDataER9accelData',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass20getAccelerometerDataER9accelData _CPPv3N10zkAppUtils7zkClass20getAccelerometerDataER9accelData _CPPv2N10zkAppUtils7zkClass20getAccelerometerDataER9accelData zkAppUtils::zkClass::getAccelerometerData__accelDataR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ae9c5c2c67b60cea02fd13e5f545158a6" names="classzk_app_utils_1_1zk_class_1ae9c5c2c67b60cea02fd13e5f545158a6"></target>void <desc_name xml:space="preserve">getAccelerometerData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve"><reference internal="True" reftitle="zkAppUtils::accelData" refuri="_api/structzk_app_utils_1_1accel_data#_CPPv4N10zkAppUtils9accelDataE">accelData</reference> &amp;<emphasis>accel_data</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get current accelerometer data and tap info. </paragraph>
                                    <paragraph>This function gets the most recent accelerometer data in units of g forces plus the tap direction per axis. Array index 0 = x 1 = y 2 = z <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>accel_data</literal>: (output) The current accelerometer data and tap information </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Binding Management</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::lockBinding\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass11lockBindingEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass11lockBindingEv _CPPv3N10zkAppUtils7zkClass11lockBindingEv _CPPv2N10zkAppUtils7zkClass11lockBindingEv zkAppUtils::zkClass::lockBinding" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a88a59ed6eca3f5bd83895d2fabac0000" names="classzk_app_utils_1_1zk_class_1a88a59ed6eca3f5bd83895d2fabac0000"></target>void <desc_name xml:space="preserve">lockBinding</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set soft binding lock. </paragraph>
                                    <paragraph>This function locks the binding for a specific HSM. This API is only valid for HSM series products. <definition_list><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getCurrentBindingInfo\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass21getCurrentBindingInfoERbRb',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass21getCurrentBindingInfoERbRb _CPPv3N10zkAppUtils7zkClass21getCurrentBindingInfoERbRb _CPPv2N10zkAppUtils7zkClass21getCurrentBindingInfoERbRb zkAppUtils::zkClass::getCurrentBindingInfo__bR.bR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a984102f5f0bfdd298db1fb67b1e2111e" names="classzk_app_utils_1_1zk_class_1a984102f5f0bfdd298db1fb67b1e2111e"></target>void <desc_name xml:space="preserve">getCurrentBindingInfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">bool &amp;<emphasis>binding_is_locked</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">bool &amp;<emphasis>is_bound</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get current binding info. </paragraph>
                                    <paragraph>This function gets the current binding lock state as well as the current binding state. This API is only valid for devices in the HSM family. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>binding_is_locked</literal>: (output) Binary value which expresses the current binding lock state. is_bound (output) Binary value which expresses the current bind state. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Perimeter Detect</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setPerimeterEventAction\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass23setPerimeterEventActionEi8uint32_t',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass23setPerimeterEventActionEi8uint32_t _CPPv3N10zkAppUtils7zkClass23setPerimeterEventActionEi8uint32_t _CPPv2N10zkAppUtils7zkClass23setPerimeterEventActionEi8uint32_t zkAppUtils::zkClass::setPerimeterEventAction__i.uint32_t" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a2bf03172ebb08f4b8aef9d2541545cdf" names="classzk_app_utils_1_1zk_class_1a2bf03172ebb08f4b8aef9d2541545cdf"></target>void <desc_name xml:space="preserve">setPerimeterEventAction</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>channel</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">uint32_t <emphasis>action_flags</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set perimeter breach action. </paragraph>
                                    <paragraph>This function specifies the action to take when a perimeter breach event occurs. The possible actions are any combination of:<bullet_list><list_item><paragraph>Notify host</paragraph></list_item><list_item><paragraph>Zymkey self-destruct <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>channel</literal>: (input) The channel (0 or 1) that the action flags will be applied to. </paragraph></list_item><list_item><paragraph><literal>action_flags</literal>: (input) The actions to apply to the perimeter event channel:<bullet_list><list_item><paragraph>Notify (ZK_PERIMETER_EVENT_ACTION_NOTIFY)</paragraph></list_item><list_item><paragraph>Self-destruct (ZK_PERIMETER_EVENT_ACTION_SELF_DESTRUCT) </paragraph></list_item></bullet_list></paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph></list_item></bullet_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setDigitalPerimeterDetectLPPeriod\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass33setDigitalPerimeterDetectLPPeriodEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass33setDigitalPerimeterDetectLPPeriodEi _CPPv3N10zkAppUtils7zkClass33setDigitalPerimeterDetectLPPeriodEi _CPPv2N10zkAppUtils7zkClass33setDigitalPerimeterDetectLPPeriodEi zkAppUtils::zkClass::setDigitalPerimeterDetectLPPeriod__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a435c6ceebccb97bcaf8316a853b0f220" names="classzk_app_utils_1_1zk_class_1a435c6ceebccb97bcaf8316a853b0f220"></target>void <desc_name xml:space="preserve">setDigitalPerimeterDetectLPPeriod</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>lp_period</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set the low power period (Supported Devices: HSM6, Secure Compute Module). </paragraph>
                                    <paragraph>This function sets low power period on the digital perimeter detect <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>void. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>lp_period</literal>: (input) low power period in microseconds </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setDigitalPerimeterDetectLPMaxBits\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass34setDigitalPerimeterDetectLPMaxBitsEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass34setDigitalPerimeterDetectLPMaxBitsEi _CPPv3N10zkAppUtils7zkClass34setDigitalPerimeterDetectLPMaxBitsEi _CPPv2N10zkAppUtils7zkClass34setDigitalPerimeterDetectLPMaxBitsEi zkAppUtils::zkClass::setDigitalPerimeterDetectLPMaxBits__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1aa78c0fb85fefdf67ba5292024718bdcf" names="classzk_app_utils_1_1zk_class_1aa78c0fb85fefdf67ba5292024718bdcf"></target>void <desc_name xml:space="preserve">setDigitalPerimeterDetectLPMaxBits</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>max_num_bits</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set the low power max number of bits (Supported Devices: HSM6, Secure Compute Module). </paragraph>
                                    <paragraph>This function sets low power max number of bits on the digital perimeter detect <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>void. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>max_num_bits</literal>: (input) max number of bits </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setDigitalPerimeterDetectDelays\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass31setDigitalPerimeterDetectDelaysEii',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass31setDigitalPerimeterDetectDelaysEii _CPPv3N10zkAppUtils7zkClass31setDigitalPerimeterDetectDelaysEii _CPPv2N10zkAppUtils7zkClass31setDigitalPerimeterDetectDelaysEii zkAppUtils::zkClass::setDigitalPerimeterDetectDelays__i.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a21ffee7105f368c8f72d6fd36de577f4" names="classzk_app_utils_1_1zk_class_1a21ffee7105f368c8f72d6fd36de577f4"></target>void <desc_name xml:space="preserve">setDigitalPerimeterDetectDelays</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>min_delay_ns</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>max_delay_ns</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set the delays (Supported Devices: HSM6, Secure Compute Module). </paragraph>
                                    <paragraph>This function sets delays on the digital perimeter detect <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>void. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>min_delay_ns</literal>: (input) minimum delay in nanoseconds </paragraph></list_item><list_item><paragraph><literal>max_delay_ns</literal>: (input) maximum delay in nanoseconds </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::waitForPerimeterEvent\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass21waitForPerimeterEventE8uint32_t',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass21waitForPerimeterEventE8uint32_t _CPPv3N10zkAppUtils7zkClass21waitForPerimeterEventE8uint32_t _CPPv2N10zkAppUtils7zkClass21waitForPerimeterEventE8uint32_t zkAppUtils::zkClass::waitForPerimeterEvent__uint32_t" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a0b2fcd99b282a30b779560375eb6e54f" names="classzk_app_utils_1_1zk_class_1a0b2fcd99b282a30b779560375eb6e54f"></target>void <desc_name xml:space="preserve">waitForPerimeterEvent</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">uint32_t <emphasis>timeout_ms</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Wait for a perimeter breach event to be detected. </paragraph>
                                    <paragraph>This function is called in order to wait for a perimeter breach event to occur. This function blocks the calling thread unless called with a timeout of zero. Note that, in order to receive perimeter events, the zymkey must have been configured to notify the host on either or both of the perimeter detect channels via a call to “zkSetPerimeterEventAction”. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>timeout_ms</literal>: (input) The maximum amount of time in milliseconds to wait for a perimeter event to arrive. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getPerimeterDetectInfo\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass22getPerimeterDetectInfoEPP8uint32_tRi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass22getPerimeterDetectInfoEPP8uint32_tRi _CPPv3N10zkAppUtils7zkClass22getPerimeterDetectInfoEPP8uint32_tRi _CPPv2N10zkAppUtils7zkClass22getPerimeterDetectInfoEPP8uint32_tRi zkAppUtils::zkClass::getPerimeterDetectInfo__uint32_tPP.iR" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a57aa4d041fe70d3d2728b4de44d4e6eb" names="classzk_app_utils_1_1zk_class_1a57aa4d041fe70d3d2728b4de44d4e6eb"></target>void <desc_name xml:space="preserve">getPerimeterDetectInfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">uint32_t **<emphasis>timestamp_sec</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int &amp;<emphasis>num_timestamps</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get current perimeter detect info. </paragraph>
                                    <paragraph>This function gets the timestamp of the first perimeter detect event for the given channel <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>timestamps_sec</literal>: (output) The timestamps for when any events occurred. The index in this array corresponds to the channel number used by zkSetPerimeterEventAction. A 0 value means no breach has occurred on this channel. This array is allocated by this routine and so it must be freed by the caller. </paragraph></list_item><list_item><paragraph><literal>num_timestamps</literal>: (output) The number of timestamps in the returned array </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::clearPerimeterDetectEvents\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass26clearPerimeterDetectEventsEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass26clearPerimeterDetectEventsEv _CPPv3N10zkAppUtils7zkClass26clearPerimeterDetectEventsEv _CPPv2N10zkAppUtils7zkClass26clearPerimeterDetectEventsEv zkAppUtils::zkClass::clearPerimeterDetectEvents" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1af94e6c0e537f18e320c65728764e5ca8" names="classzk_app_utils_1_1zk_class_1af94e6c0e537f18e320c65728764e5ca8"></target>void <desc_name xml:space="preserve">clearPerimeterDetectEvents</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Clear perimeter detect info. </paragraph>
                                    <paragraph>This function clears all perimeter detect info and rearms all perimeter detect channels <definition_list><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getModelNumberString\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass20getModelNumberStringEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass20getModelNumberStringEv _CPPv3N10zkAppUtils7zkClass20getModelNumberStringEv _CPPv2N10zkAppUtils7zkClass20getModelNumberStringEv zkAppUtils::zkClass::getModelNumberString" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a732b084f85070c00ef2423f76aba29e2" names="classzk_app_utils_1_1zk_class_1a732b084f85070c00ef2423f76aba29e2"></target>std::string *<desc_name xml:space="preserve">getModelNumberString</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get Zymkey model number. </paragraph>
                                    <paragraph>This function retrieves the model number of the zymkey referred to in a specified context <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>A pointer to a string containing the Zymkey model number. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getFirmwareVersionString\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass24getFirmwareVersionStringEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass24getFirmwareVersionStringEv _CPPv3N10zkAppUtils7zkClass24getFirmwareVersionStringEv _CPPv2N10zkAppUtils7zkClass24getFirmwareVersionStringEv zkAppUtils::zkClass::getFirmwareVersionString" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a00d5031efc2b7040db08da5e86e85e2c" names="classzk_app_utils_1_1zk_class_1a00d5031efc2b7040db08da5e86e85e2c"></target>std::string *<desc_name xml:space="preserve">getFirmwareVersionString</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get Zymkey firmware version. </paragraph>
                                    <paragraph>This function retrieves the firmware version of the zymkey referred to in a specified context. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>A pointer to a string containing the Zymkey firmware version. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getSerialNumberString\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass21getSerialNumberStringEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass21getSerialNumberStringEv _CPPv3N10zkAppUtils7zkClass21getSerialNumberStringEv _CPPv2N10zkAppUtils7zkClass21getSerialNumberStringEv zkAppUtils::zkClass::getSerialNumberString" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ab545df4772a4c23fae3e970a9e185a38" names="classzk_app_utils_1_1zk_class_1ab545df4772a4c23fae3e970a9e185a38"></target>std::string *<desc_name xml:space="preserve">getSerialNumberString</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get Zymkey serial number. </paragraph>
                                    <paragraph>This function retrieves the serial number of the zymkey referred to in a specified context. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>A pointer to a string containing the Zymkey serial number. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Module Info</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getCPUTemp\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10getCPUTempEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10getCPUTempEv _CPPv3N10zkAppUtils7zkClass10getCPUTempEv _CPPv2N10zkAppUtils7zkClass10getCPUTempEv zkAppUtils::zkClass::getCPUTemp" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a6956a4bedbe0baee05318807605dc674" names="classzk_app_utils_1_1zk_class_1a6956a4bedbe0baee05318807605dc674"></target>float <desc_name xml:space="preserve">getCPUTemp</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get the CPU Temp. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function gets the current HSM CPU temp. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The CPU temp as a float. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getAUXTemp\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass10getAUXTempEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass10getAUXTempEi _CPPv3N10zkAppUtils7zkClass10getAUXTempEi _CPPv2N10zkAppUtils7zkClass10getAUXTempEi zkAppUtils::zkClass::getAUXTemp__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a65b659edb8e402ab00b90177599220d5" names="classzk_app_utils_1_1zk_class_1a65b659edb8e402ab00b90177599220d5"></target>float <desc_name xml:space="preserve">getAUXTemp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>index</emphasis> = 0</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get the AUX Temp. (Secure Compute Modules Only) </paragraph>
                                    <paragraph>This function gets the current temp of an aux processor. (defaults to 0). THIS FUNCTION IS FOR INTERNAL ZYMBIT USE ONLY. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The CPU temp as a float. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getRTCDrift\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass11getRTCDriftEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass11getRTCDriftEv _CPPv3N10zkAppUtils7zkClass11getRTCDriftEv _CPPv2N10zkAppUtils7zkClass11getRTCDriftEv zkAppUtils::zkClass::getRTCDrift" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a2a9214bf2810417108ea300ff79b6d46" names="classzk_app_utils_1_1zk_class_1a2a9214bf2810417108ea300ff79b6d46"></target>float <desc_name xml:space="preserve">getRTCDrift</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get the RTC drift. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function gets the current RTC drift. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>The RTC drift as a float. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getBatteryVoltage\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass17getBatteryVoltageEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass17getBatteryVoltageEv _CPPv3N10zkAppUtils7zkClass17getBatteryVoltageEv _CPPv2N10zkAppUtils7zkClass17getBatteryVoltageEv zkAppUtils::zkClass::getBatteryVoltage" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1acaf94e9560d986f54750718ce6f12402" names="classzk_app_utils_1_1zk_class_1acaf94e9560d986f54750718ce6f12402"></target>float <desc_name xml:space="preserve">getBatteryVoltage</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get the battery voltage(Supported Devices: HSM6, Secure Compute Module). </paragraph>
                                    <paragraph>This function gets the current battery voltage <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>the battery voltage as a float. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">Battery Voltage Monitor</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setBatteryVoltageAction\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass23setBatteryVoltageActionE24ZK_THRESHOLD_ACTION_TYPE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass23setBatteryVoltageActionE24ZK_THRESHOLD_ACTION_TYPE _CPPv3N10zkAppUtils7zkClass23setBatteryVoltageActionE24ZK_THRESHOLD_ACTION_TYPE _CPPv2N10zkAppUtils7zkClass23setBatteryVoltageActionE24ZK_THRESHOLD_ACTION_TYPE zkAppUtils::zkClass::setBatteryVoltageAction__ZK_THRESHOLD_ACTION_TYPE" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a374940c6de51d1a2bf9259d0542e0b0c" names="classzk_app_utils_1_1zk_class_1a374940c6de51d1a2bf9259d0542e0b0c"></target>void <desc_name xml:space="preserve">setBatteryVoltageAction</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_THRESHOLD_ACTION_TYPE <emphasis>action</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set battery voltage threshold action. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function specifies the action to take when the battery voltage falls below the threshold set by zkSetBatteryVoltageThreshold. If this function is never called, do nothing is default. There are three actions:<bullet_list><list_item><paragraph>Do nothing</paragraph></list_item><list_item><paragraph>Go to sleep until battery is replaced</paragraph></list_item><list_item><paragraph>Self-destruct <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>action</literal>: (input) The action to apply, specify one of the ZK_THRESHOLD_ACTION_TYPE:<bullet_list><list_item><paragraph>Do nothing (ZK_ACTION_NONE)</paragraph></list_item><list_item><paragraph>Sleep (ZK_ACTION_SLEEP)</paragraph></list_item><list_item><paragraph>Self-destruct (ZK_ACTION_SELF_DESTRUCT) </paragraph></list_item></bullet_list></paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph></list_item></bullet_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setBatteryVoltageThreshold\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass26setBatteryVoltageThresholdEf',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass26setBatteryVoltageThresholdEf _CPPv3N10zkAppUtils7zkClass26setBatteryVoltageThresholdEf _CPPv2N10zkAppUtils7zkClass26setBatteryVoltageThresholdEf zkAppUtils::zkClass::setBatteryVoltageThreshold__float" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1af48b1f11765f94cc8f707101f197eeb5" names="classzk_app_utils_1_1zk_class_1af48b1f11765f94cc8f707101f197eeb5"></target>void <desc_name xml:space="preserve">setBatteryVoltageThreshold</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">float <emphasis>threshold</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Sets the battery voltage threshold. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function sets the threshold at which if the battery voltage falls bellow, the action set by zkSetBatteryVoltageAction will be carried out. The recommended threshold is 2.3V is assumed by default. Threshold must be below 2.5V. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>threshold</literal>: (input) The threshold in Volts. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="user-defined">
                            <rubric classes="breathe-sectiondef-title">CPU Temperature Monitor</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setCPUTempAction\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass16setCPUTempActionE24ZK_THRESHOLD_ACTION_TYPE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass16setCPUTempActionE24ZK_THRESHOLD_ACTION_TYPE _CPPv3N10zkAppUtils7zkClass16setCPUTempActionE24ZK_THRESHOLD_ACTION_TYPE _CPPv2N10zkAppUtils7zkClass16setCPUTempActionE24ZK_THRESHOLD_ACTION_TYPE zkAppUtils::zkClass::setCPUTempAction__ZK_THRESHOLD_ACTION_TYPE" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ada7ce931928fedde9cec5c15cb1d1d91" names="classzk_app_utils_1_1zk_class_1ada7ce931928fedde9cec5c15cb1d1d91"></target>void <desc_name xml:space="preserve">setCPUTempAction</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">ZK_THRESHOLD_ACTION_TYPE <emphasis>action</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Set HSM CPU temperature threshold action. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function specifies the action to take when the HSM CPU temperature falls below the threshold set by zkSetCPULowTempThreshold, or rises above the threshold set by zkSetCPUHighTempThreshold. There are two actions to apply:<bullet_list><list_item><paragraph>Do nothing</paragraph></list_item><list_item><paragraph>Self-destruct <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>action</literal>: (input) The action to apply, used it’s named constant from ZK_THRESHOLD_ACTION_TYPE:<bullet_list><list_item><paragraph>Do nothing (ZK_ACTION_NONE)</paragraph></list_item><list_item><paragraph>Self-destruct (ZK_ACTION_SELF_DESTRUCT) </paragraph></list_item></bullet_list></paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph></list_item></bullet_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setCPULowTempThreshold\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass22setCPULowTempThresholdEf',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass22setCPULowTempThresholdEf _CPPv3N10zkAppUtils7zkClass22setCPULowTempThresholdEf _CPPv2N10zkAppUtils7zkClass22setCPULowTempThresholdEf zkAppUtils::zkClass::setCPULowTempThreshold__float" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1aee3dcb54cfa647f1f51b81d539ceb1d6" names="classzk_app_utils_1_1zk_class_1aee3dcb54cfa647f1f51b81d539ceb1d6"></target>void <desc_name xml:space="preserve">setCPULowTempThreshold</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">float <emphasis>threshold</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Sets the HSM CPU low temperature threshold. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function sets the threshold at which if the on-board HSM CPU’s tempreature falls below, the action set by zkSetCPUTempAction will be carried out. WARNING: You can lock yourself out in dev mode if you set a threshold above the CPU’s ambient temperature. The recommended setting is no more than 20C. If no threshold is set, -10 degrees Celsius is set as default. <definition_list><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>threshold</literal>: (input) The threshold in celsius. </paragraph></list_item></bullet_list></definition></definition_list_item><definition_list_item><term><strong>Exceptions</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>zkAppUtilsException</literal>: upon error </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setCPUHighTempThreshold\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass23setCPUHighTempThresholdEf',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass23setCPUHighTempThresholdEf _CPPv3N10zkAppUtils7zkClass23setCPUHighTempThresholdEf _CPPv2N10zkAppUtils7zkClass23setCPUHighTempThresholdEf zkAppUtils::zkClass::setCPUHighTempThreshold__float" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a7ca53d9e747c76a88be85aad6ed60e3b" names="classzk_app_utils_1_1zk_class_1a7ca53d9e747c76a88be85aad6ed60e3b"></target>void <desc_name xml:space="preserve">setCPUHighTempThreshold</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">float <emphasis>threshold</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Sets the HSM CPU high temperature threshold. (Supported Devices: HSM6, Secure Compute Module) </paragraph>
                                    <paragraph>This function sets the threshold at which if the on-board HSM CPU’s tempreature rises above, the action set by zkSetCPUTempAction will be carried out. WARNING: You can lock yourself out in dev mode if you set a threshold below the CPU’s ambient temperature. The recommended setting is no less than 40C. If no threshold is set, 65 degrees celsius is set as default. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>0 for success, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>threshold</literal>: (input) The threshold in celsius. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::setSupervisedBootPolicy\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass23setSupervisedBootPolicyEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass23setSupervisedBootPolicyEi _CPPv3N10zkAppUtils7zkClass23setSupervisedBootPolicyEi _CPPv2N10zkAppUtils7zkClass23setSupervisedBootPolicyEi zkAppUtils::zkClass::setSupervisedBootPolicy__i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a3f0de0eee83e1ca06453bc44eaaa3e7c" names="classzk_app_utils_1_1zk_class_1a3f0de0eee83e1ca06453bc44eaaa3e7c"></target>void <desc_name xml:space="preserve">setSupervisedBootPolicy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">int <emphasis>policy_id</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Sets the Supervised boot policy. (Supported Devices: Secure Compute Module) </paragraph>
                                    <paragraph>This function specifies the action to take when Supervised boot event triggers based on a file change. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>0 for success, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>policy_id</literal>: (input) The actions to apply to the Supervised boot process:<bullet_list><list_item><paragraph>0 Do Nothing (ZK_SUPBOOT_FAIL_NO_ACTION)</paragraph></list_item><list_item><paragraph>1 Self-Destruct (ZK_SUPBOOT_FAIL_DESTROY)</paragraph></list_item><list_item><paragraph>2 Hold Chip in Reset (ZK_SUPBOOT_FAIL_HOLD_RESET) </paragraph></list_item></bullet_list></paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::addOrUpdateSupervisedBootFile\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass29addOrUpdateSupervisedBootFileENSt6stringEi',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass29addOrUpdateSupervisedBootFileENSt6stringEi _CPPv3N10zkAppUtils7zkClass29addOrUpdateSupervisedBootFileENSt6stringEi _CPPv2N10zkAppUtils7zkClass29addOrUpdateSupervisedBootFileENSt6stringEi zkAppUtils::zkClass::addOrUpdateSupervisedBootFile__ss.i" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a5eeea590e4d73911e87334a313590f9b" names="classzk_app_utils_1_1zk_class_1a5eeea590e4d73911e87334a313590f9b"></target>void <desc_name xml:space="preserve">addOrUpdateSupervisedBootFile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>file_path</emphasis></desc_parameter><desc_parameter noemph="True" xml:space="preserve">int <emphasis>slot</emphasis> = 15</desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Update file manifest for Supervised boot to check. (Supported Devices: Secure Compute Module) </paragraph>
                                    <paragraph>This function adds or updates files to be checked by Supervised boot. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>0 for success, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>file_path</literal>: (input) The file to be signed and checked by Supervised boot. </paragraph></list_item><list_item><paragraph><literal>slot</literal>: (input) The slot to sign the file with. Defaults to 15, if no slot 15, defaults to 0. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::removeSupervisedBootFile\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass24removeSupervisedBootFileENSt6stringE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass24removeSupervisedBootFileENSt6stringE _CPPv3N10zkAppUtils7zkClass24removeSupervisedBootFileENSt6stringE _CPPv2N10zkAppUtils7zkClass24removeSupervisedBootFileENSt6stringE zkAppUtils::zkClass::removeSupervisedBootFile__ss" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1a9115df2b0c1feae8708efad9481a2983" names="classzk_app_utils_1_1zk_class_1a9115df2b0c1feae8708efad9481a2983"></target>void <desc_name xml:space="preserve">removeSupervisedBootFile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter noemph="True" xml:space="preserve">std::string <emphasis>file_path</emphasis></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Remove a file from file manifest for Supervised boot to check. (Supported Devices: Secure Compute Module) </paragraph>
                                    <paragraph>This function removes a file to be checked by Supervised boot. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>0 for success, less than 0 for failure. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>file_path</literal>: (input) The file to be removed from the Supervised boot manifest. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                            <index entries="['single',\ 'zkAppUtils::zkClass::getSupervisedBootFileManifest\ (C++\ function)',\ '_CPPv4N10zkAppUtils7zkClass29getSupervisedBootFileManifestEv',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="function" domain="cpp" noindex="False" objtype="function">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass29getSupervisedBootFileManifestEv _CPPv3N10zkAppUtils7zkClass29getSupervisedBootFileManifestEv _CPPv2N10zkAppUtils7zkClass29getSupervisedBootFileManifestEv zkAppUtils::zkClass::getSupervisedBootFileManifest" is_multiline="True"><desc_signature_line add_permalink="False" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1aa45bb9f777a4dd11f4bb35a5a5fd6d18" names="classzk_app_utils_1_1zk_class_1aa45bb9f777a4dd11f4bb35a5a5fd6d18"></target>std::string *<desc_name xml:space="preserve">getSupervisedBootFileManifest</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature_line></desc_signature>
                                <desc_content>
                                    <paragraph>Get file manifest for Supervised boot to check. (Supported Devices: Secure Compute Module) </paragraph>
                                    <paragraph>This function gets the list of files to be checked by Supervised boot. <definition_list><definition_list_item><term><strong>Return</strong></term><definition><paragraph>a string for the list of files in the manifest. </paragraph></definition></definition_list_item><definition_list_item><term><strong>Parameters</strong></term><definition><bullet_list classes="breatheparameterlist"><list_item><paragraph><literal>manifest</literal>: (output) The file manifest that is checked by Supervised boot. </paragraph></list_item></bullet_list></definition></definition_list_item></definition_list></paragraph>
                                </desc_content>
                            </desc>
                        </container>
                        <container classes="breathe-sectiondef" objtype="private-attrib">
                            <rubric classes="breathe-sectiondef-title">Private Members</rubric>
                            <index entries="['single',\ 'zkAppUtils::zkClass::zkContext\ (C++\ member)',\ '_CPPv4N10zkAppUtils7zkClass9zkContextE',\ '',\ None]"></index>
                            <desc classes="cpp" desctype="var" domain="cpp" noindex="False" objtype="var">
                                <desc_signature ids="_CPPv4N10zkAppUtils7zkClass9zkContextE _CPPv3N10zkAppUtils7zkClass9zkContextE _CPPv2N10zkAppUtils7zkClass9zkContextE zkAppUtils::zkClass::zkContext__zkCTX" is_multiline="True"><desc_signature_line add_permalink="True" xml:space="preserve"><target ids="classzk_app_utils_1_1zk_class_1ad031ca546148ceb59ec648fab2be6722" names="classzk_app_utils_1_1zk_class_1ad031ca546148ceb59ec648fab2be6722"></target>zkCTX <desc_name xml:space="preserve">zkContext</desc_name></desc_signature_line></desc_signature>
                                <desc_content>
                                </desc_content>
                            </desc>
                        </container>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
