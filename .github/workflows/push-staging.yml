name: push to staging

on:
  push:
    branches-ignore:
      - main
      - gh-pages
    paths-ignore:
      - '.github/**'
  create:
    branches-ignore:
      - main
      - gh-pages
  delete:
    branches-ignore:
      - main
      - gh-pages
  workflow_dispatch:

jobs:
  check-repo:
    runs-on: ubuntu-latest
    outputs:
      is_staging: ${{ steps.check.outputs.is_staging }}

    steps:
      - name: check repo
        id: check
        run: echo "::set-output name=is_staging::${{ contains(github.repository, '-staging') }}"

  mirror-branch:
    runs-on: ubuntu-latest
    needs: check-repo
    if: ${{ github.event_name != 'delete' && needs.check-repo.outputs.is_staging == 'false' }}

    steps:
      - name: load ssh private key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.STAGING_DEPLOY_KEY }}
        run: |
          mkdir -p ${HOME}/.ssh

          cp /etc/ssh/ssh_config ${HOME}/.ssh/config || true
          echo -e "Host *\n\tStrictHostKeyChecking no" >> ${HOME}/.ssh/config

          echo "${SSH_PRIVATE_KEY}" > ${HOME}/.ssh/id_rsa
          chmod 600 ${HOME}/.ssh/id_rsa

          git config --global user.name github-actions[bot]
          git config --global user.email github-actions[bot]@users.noreply.github.com

      # Checkout repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        with:
          submodules: true
          path: branch
          fetch-depth: 0

      - name: configure mirror
        env:
          MIRROR_REPO: ${{ secrets.MIRROR_REPO }}
        run: |
          git clone ${{ secrets.MIRROR_REPO }} upstream-staging

          cd ${GITHUB_WORKSPACE}/branch

          git remote add staging "${MIRROR_REPO}"
          git remote remove origin

          wget https://raw.githubusercontent.com/newren/git-filter-repo/main/git-filter-repo
          chmod +x git-filter-repo
          ./git-filter-repo --force --path ".github" --invert-paths

          cp -R ${GITHUB_WORKSPACE}/upstream-staging/.github .
          git add .github
          git commit -m "add upstream workflows to branch"

          git push --force staging ${{ github.ref }}

  delete-branch:
    runs-on: ubuntu-latest
    needs: check-repo
    env:
      DELETED_BRANCH: ${{ github.event.ref }}
    if: ${{ github.event_name == 'delete' && needs.check-repo.outputs.is_staging == 'false' }}

    steps:
      - name: load ssh private key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.STAGING_DEPLOY_KEY }}
        run: |
          mkdir -p ${HOME}/.ssh

          cp /etc/ssh/ssh_config ${HOME}/.ssh/config || true
          echo -e "Host *\n\tStrictHostKeyChecking no" >> ${HOME}/.ssh/config

          echo "${SSH_PRIVATE_KEY}" > ${HOME}/.ssh/id_rsa
          chmod 600 ${HOME}/.ssh/id_rsa

      # Checkout repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: delete mirrored branch
        env:
          MIRROR_REPO: ${{ secrets.MIRROR_REPO }}
        run: |
          cd ${GITHUB_WORKSPACE}

          git remote add staging "${MIRROR_REPO}"
          git remote remove origin

          git push --force staging --delete ${DELETED_BRANCH}
