name: process api docs update

on:
  push:
    branches:
      - "api-docs-update"
  workflow_dispatch:

jobs:
  prepare_hugo_environment:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the branch with updated API docs
        uses: actions/checkout@v2
        with:
          ref: "api-docs-update"
          submodules: true
          fetch-depth: 0

      - name: Hugo-ify the API docs
        id: hugoify
        uses: zymbit-docs/actions-hugoify-api-docs@master

      - name: Prepare processed files for commit
        id: prepare-commit
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

          git add ./content/api/
          git rm -r ./content/GENERATED/

          LAST_COMMIT_MSG=$(git log -1 --grep="^docs" --format="%s" -- content/GENERATED/)
          LAST_HASH=$(expr "$LAST_COMMIT_MSG" : '.* \([0-9a-fA-F]*\)') || LAST_HASH="MANUALLY_PUSHED"

          echo -e "::debug::Value of LAST_HASH: ${LAST_HASH}"

          GHA_HUGOIFY_LOG=$(cat .GHA-LOG)
          echo -e "docs: format latest zkapputils (${LAST_HASH}) docs\n" > .NEW_COMMIT_MSG
          echo -e "${GHA_HUGOIFY_LOG}\n" >> .NEW_COMMIT_MSG
          echo -e "NOTE: THIS COMMIT WAS AUTOMATICALLY GENERATED." >> .NEW_COMMIT_MSG

          echo "UPSTREAM_COMMIT_HASH=${LAST_HASH}" >> $GITHUB_ENV

          git commit --file=.NEW_COMMIT_MSG

          echo -e "::debug::Git log for commit:\n$(git log -1 --pretty=fuller)"

          echo -e "::debug::Git status:\n$(git status)"

          git push origin api-docs-update

      - name: Install the latest GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install -y gh

      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ github.token }}
          UPSTREAM_COMMIT_HASH: ${{ env.UPSTREAM_COMMIT_HASH }}
        id: create-pr
        run: |
          gh config set prompt disabled

          echo -e "::debug::GitHub CLI auth status:\n$(gh auth status)"

          echo -e "The following files have been changed in this pull request:\n" > .NEW_PR_BODY
          cat .GHA-LOG >> .NEW_PR_BODY
          echo -e "\n\nThis includes the following commits:\n" >> .NEW_PR_BODY
          git log origin/main..HEAD --format='%s' --reverse >> .NEW_PR_BODY
          echo -e "\n NOTE: This pull request was automatically generated by a GitHub Action." >> .NEW_PR_BODY

          if ! gh pr view api-docs-update > /dev/null 2>&1; then
            gh pr create \
              --title "Update API documentation to latest version (${UPSTREAM_COMMIT_HASH})" \
              --body-file .NEW_PR_BODY \
              --base main \
              --draft \
              --head api-docs-update \
              --label "api" --label "automated pr" \
              --no-maintainer-edit
          else
            # gh pr view api-docs-update | sed -n "/^--$/,/EOF/p" > .CURR_PR_BODY
            # PREVIOUS_PUSH_COUNT="**UPDATE #$(grep -o -E "^--$" .CURR_PR_BODY -c):**\n"

            # echo -e $PREVIOUS_PUSH_COUNT| cat - .NEW_PR_BODY .CURR_PR_BODY > .REVISED_PR_BODY

            gh pr edit api-docs-update \
              --title "Update API documentation to latest version (${UPSTREAM_COMMIT_HASH})" \
              --body "$(cat .NEW_PR_BODY)"
          fi
